{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap 7a1700c21eb125000224","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\symbols.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\classInfo.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\componentInfo.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\defineProperty.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\options.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\log.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\simpleCombineReducers.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\creatorInfo.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\creatorMethods.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\reduxApp.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\connectOptions.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\connect.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\decorator.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\component.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\computed.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\ignoreState.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\noDispatch.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\sequence.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\withId.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\reducer.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\component.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\actions.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\index.ts","external \"redux\"","external \"lodash.get\"","external \"reflect-metadata\"","external \"lodash.isequal\"","external \"lodash.snakecase\""],"names":[],"mappings":"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","file":"redux-app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"redux-app\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"redux-app\"] = factory();\n\telse\n\t\troot[\"redux-app\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7a1700c21eb125000224","\r\nexport function isSymbol(obj: any): obj is symbol {\r\n    return typeof obj === 'symbol' || obj instanceof Symbol;\r\n}\r\n\r\nexport function setSymbol<T>(obj: any, symbol: symbol, value: T): T {\r\n    return obj[symbol] = value;\r\n}\r\n\r\nexport function getSymbol(obj: any, symbol: symbol): any {\r\n    return obj[symbol];\r\n}\r\n\r\nexport function getOwnSymbol(obj: any, symbol: symbol): any {\r\n    return Object.getOwnPropertySymbols(obj).includes(symbol) && getSymbol(obj, symbol);\r\n}\r\n\r\n/**\r\n * Stored on component instances.\r\n */\r\nexport const COMPONENT_INFO = Symbol('REDUX-APP.COMPONENT_INFO');\r\n/**\r\n * Stored on creators constructor.\r\n */\r\nexport const CREATOR_INFO = Symbol('REDUX-APP.CREATOR_INFO');\r\n/**\r\n * Stored on any class constructor.\r\n */\r\nexport const CLASS_INFO = Symbol('REDUX-APP.CLASS_INFO');\r\nexport const AUTO_ID = Symbol('REDUX-APP.AUTO_ID');\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/symbols.ts","import { CLASS_INFO, getSymbol, setSymbol } from '../symbols';\r\nimport { Getter, IMap } from '../types';\r\n\r\n/**\r\n * Metadata stored on instances of regular and/or component classes.\r\n */\r\nexport class ClassInfo {\r\n\r\n    public static getInfo(obj: object): ClassInfo {\r\n        if (!obj)\r\n            return undefined;\r\n\r\n        return getSymbol(obj, CLASS_INFO);\r\n    }\r\n\r\n    public static getOrInitInfo(obj: object): ClassInfo {\r\n\r\n        // get previous\r\n        var info = ClassInfo.getInfo(obj);\r\n\r\n        // create if no previous\r\n        if (!info) {\r\n            info = setSymbol(obj, CLASS_INFO, new ClassInfo());\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n    public computedGetters: IMap<Getter> = {};\r\n    public connectedProps: IMap<boolean> = {};\r\n    public ignoreState: IMap<boolean> = {};\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/classInfo.ts","import { Dispatch } from 'redux';\r\nimport { Component, ReducerCreator } from '../components';\r\nimport { COMPONENT_INFO, getSymbol, setSymbol } from '../symbols';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Metadata stored on every component instance.\r\n */\r\nexport class ComponentInfo {\r\n\r\n    public static getInfo(component: Component): ComponentInfo {\r\n        if (!component)\r\n            return undefined;\r\n\r\n        return getSymbol(component, COMPONENT_INFO);\r\n    }\r\n\r\n    public static initInfo(component: Component): ComponentInfo {\r\n        return setSymbol(component, COMPONENT_INFO, new ComponentInfo());\r\n    }\r\n\r\n    public id: any;\r\n    public originalClass: Function;\r\n    public dispatch: Dispatch<any>;\r\n    public reducerCreator: ReducerCreator;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/componentInfo.ts","export const dataDescriptor: PropertyDescriptor = {\r\n    writable: true,\r\n    configurable: true,\r\n    enumerable: true\r\n};\r\n\r\nexport const accessorDescriptor: PropertyDescriptor = {\r\n    configurable: true,\r\n    enumerable: true\r\n};\r\n\r\nexport function deferredDefineProperty(target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\r\n    const init = (isGet: boolean) => function (this: any, newVal?: any) {\r\n\r\n        //\r\n        // This code addresses an issue/limitation with typescript and defineProperty inside property decorator.        \r\n        // https://stackoverflow.com/questions/43950908/typescript-decorator-and-object-defineproperty-weird-behavior\r\n        //\r\n\r\n        // Define the property.\r\n        // This is called at runtime, so \"this\" is the instance.\r\n        Object.defineProperty(this, propertyKey, descriptor);\r\n\r\n        // Perform original action\r\n        if (isGet) {\r\n            return this[propertyKey];\r\n        } else {\r\n            this[propertyKey] = newVal;\r\n        }\r\n    };\r\n\r\n    // Override property to let init occur on first get/set\r\n    return Object.defineProperty(target, propertyKey, {\r\n        get: init(true),\r\n        set: init(false),\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/defineProperty.ts","\r\n//\r\n// schema options\r\n//\r\n\r\nexport class SchemaOptions {\r\n    /**\r\n     * Add the class name of the object that holds the action to the action name.\r\n     * Format: <class name><separator><action name>\r\n     * Default value: true.\r\n     */\r\n    public actionNamespace? = true;\r\n    /**\r\n     * Default value: . (dot)\r\n     */\r\n    public actionNamespaceSeparator? = '.';\r\n    /**\r\n     * Use redux style action names. For instance, if a component defines a\r\n     * method called 'incrementCounter' the matching action name will be\r\n     * 'INCREMENT_COUNTER'.\r\n     * Default value: true.\r\n     */\r\n    public uppercaseActions? = true;\r\n}\r\n\r\n//\r\n// computed options\r\n//\r\n\r\nexport class ComputedOptions {\r\n    /**\r\n     * Whether to perform deep comparison or a simple equality comparison\r\n     * before updating computed values. Using deep comparison has a small\r\n     * additional performance cost.\r\n     * Default value: true.\r\n     */\r\n    public deepComparison = true;\r\n}\r\n\r\n//\r\n// app options\r\n//\r\n\r\nexport class AppOptions {\r\n    /**\r\n     * Name of the newly created app.     \r\n     */\r\n    public name?: string;\r\n    /**\r\n     * By default each component is assigned (with some optimizations) with it's\r\n     * relevant sub state on each store change. Set this to false to disable\r\n     * this updating process. The store's state will still be updated as usual\r\n     * and can always be retrieved using store.getState().\r\n     * Default value: true.\r\n     */\r\n    public updateState? = true;    \r\n}\r\n\r\n//\r\n// global options\r\n//\r\n\r\nexport enum LogLevel {\r\n    /**\r\n     * Emit no logs\r\n     */\r\n    None = 0,\r\n    Verbose = 1,    \r\n    Debug = 2,\r\n    Warn = 5,\r\n    /**\r\n     * Emit no logs (same as None)\r\n     */\r\n    Silent = 10\r\n}\r\n\r\nexport class GlobalOptions {\r\n    /**\r\n     * Default value: LogLevel.Warn\r\n     */\r\n    public logLevel = LogLevel.Warn;\r\n    /**\r\n     * When set to 'true' every component will have an additional __originalClassName__ property.\r\n     * Can be useful for debugging.\r\n     * Default value: false.\r\n     */\r\n    public emitClassNames = false;\r\n    /**\r\n     * #### From the original redux FAQ: \r\n     * \r\n     * Q: Can I put functions, promises, or other non-serializable items in my\r\n     * store state? \r\n     * \r\n     * A: It is highly recommended that you only put plain serializable objects,\r\n     * arrays, and primitives into your store. It's technically possible to\r\n     * insert non-serializable items into the store, but doing so can break the\r\n     * ability to persist and rehydrate the contents of a store, as well as\r\n     * interfere with time-travel debugging.\r\n     *\r\n     * If you are okay with things like persistence and time-travel debugging\r\n     * potentially not working as intended, then you are totally welcome to put\r\n     * non-serializable items into your Redux store. Ultimately, it's your\r\n     * application, and how you implement it is up to you. As with many other\r\n     * things about Redux, just be sure you understand what tradeoffs are\r\n     * involved. \r\n     * \r\n     * #### The case in redux-app:\r\n     * \r\n     * By default redux-app aligns with redux recommendations and treats\r\n     * everything stored in the store state as a plain object to prevent the\r\n     * previously described issues. This approach may come with some performance\r\n     * (and of course usability) cost. Therefor if you don't care about time\r\n     * travel debugging or rehydration of the store content etc. and you don't\r\n     * want to pay the aforementioned cost you can set this option to false.\r\n     * \r\n     * Default value: true.\r\n     */\r\n    public convertToPlainObject? = true;    \r\n    /**\r\n     * Global defaults.\r\n     * Options supplied explicitly via the decorator will override options specified here.\r\n     */\r\n    public schema = new SchemaOptions();\r\n    /**\r\n     * Customize `computed` properties behavior.\r\n     */\r\n    public computed = new ComputedOptions();\r\n}\r\n\r\nexport const globalOptions = new GlobalOptions();\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/options.ts","import { globalOptions, LogLevel } from '../options';\r\n\r\n// tslint:disable:no-console\r\n\r\nclass Log {\r\n\r\n    public verbose(message: string, ...optionalParams: any[]): void {\r\n        if (!this.shouldLog(LogLevel.Verbose))\r\n            return;\r\n        console.debug('VERBOSE [redux-app] ' + message, ...optionalParams);\r\n    }\r\n\r\n    public debug(message: string, ...optionalParams: any[]): void {\r\n        if (!this.shouldLog(LogLevel.Debug))\r\n            return;\r\n        console.log('DEBUG [redux-app] ' + message, ...optionalParams);\r\n    }\r\n\r\n    public warn(message: string, ...optionalParams: any[]): void {\r\n        if (!this.shouldLog(LogLevel.Warn))\r\n            return;\r\n        console.warn('WARN [redux-app] ' + message, ...optionalParams);\r\n    }\r\n\r\n    private shouldLog(level: LogLevel): boolean {\r\n        if (globalOptions.logLevel === LogLevel.None)\r\n            return false;\r\n        if (globalOptions.logLevel > level)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport const log = new Log();\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/log.ts","import { AnyAction, ReducersMapObject } from 'redux';\r\n\r\n/**\r\n * A simple version of redux combineReducers with no assertions or warnings.\r\n * @see https://raw.githubusercontent.com/reactjs/redux/master/src/combineReducers.js\r\n */\r\nexport function simpleCombineReducers(reducers: ReducersMapObject): any {\r\n    const reducerKeys = Object.keys(reducers);\r\n\r\n    return function combination(state: any = {}, action: AnyAction) {\r\n        let hasChanged = false;\r\n        const nextState: any = {};\r\n        for (let key of reducerKeys) {\r\n            const reducer = reducers[key];\r\n            const previousStateForKey = state[key];\r\n            const nextStateForKey = reducer(previousStateForKey, action);\r\n            nextState[key] = nextStateForKey;\r\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\r\n        }\r\n        return hasChanged ? nextState : state;\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/simpleCombineReducers.ts","import { isSymbol } from '../symbols';\r\nimport { IMap, Method } from '../types';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Return true if 'val' is primitive. For the sake of this test 'null' and\r\n * 'undefined' are considered primitives.\r\n */\r\nexport function isPrimitive(val: any): boolean {\r\n    if (!val)\r\n        return true;\r\n\r\n    const type = typeof val;\r\n    return type !== 'object' && type !== 'function';\r\n}\r\n\r\n/**\r\n * @param obj \r\n * @param bind Whether or not to bind the returned methods to 'obj'. Default\r\n * value: false.\r\n */\r\nexport function getMethods(obj: object | Function, bind = false): IMap<Method> {\r\n    if (!obj)\r\n        return undefined;\r\n\r\n    var proto: any;\r\n    if (typeof obj === 'object') {\r\n        proto = Object.getPrototypeOf(obj);\r\n    } else if (typeof obj === 'function') {\r\n        proto = obj.prototype;\r\n    } else {\r\n        throw new Error(\"Expected an object or a function. Got: \" + obj);\r\n    }\r\n\r\n    if (!proto)\r\n        return undefined;\r\n\r\n    var methods: any = {};\r\n    for (let key of Object.keys(proto)) {\r\n\r\n        // avoid invoking getters\r\n        var desc = Object.getOwnPropertyDescriptor(proto, key);\r\n        var hasGetter = desc && typeof desc.get === 'function';\r\n\r\n        if (!hasGetter && typeof proto[key] === 'function') {\r\n            methods[key] = proto[key];\r\n            if (bind) {\r\n                methods[key] = methods[key].bind(obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    return methods;\r\n}\r\n\r\nexport function getConstructorOwnProp(obj: object, key: symbol | string): any {\r\n    if (!obj || !obj.constructor)\r\n        return undefined;\r\n\r\n    const ctor = (obj.constructor as any);\r\n    if (isSymbol(key) && Object.getOwnPropertySymbols(ctor).includes(key)) {\r\n        return ctor[key];\r\n    } else if (typeof key === 'string' && Object.getOwnPropertyNames(ctor).includes(key)) {\r\n        return ctor[key];\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * If 'obj' is a function it's assumed to be a constructor function and returned as-is.\r\n * If 'obj' is an object it's type is returned.\r\n * Otherwise the function throws.\r\n */\r\nexport function getType(obj: object | Function): Function {\r\n    if (!obj)\r\n        return undefined;\r\n\r\n    // constructor function\r\n    if (typeof obj === 'function')\r\n        return obj;\r\n\r\n    // object\r\n    if (typeof obj === 'object')\r\n        return Object.getPrototypeOf(obj).constructor;\r\n\r\n    throw new Error(\"Expected an object or a function. Got: \" + obj);\r\n}\r\n\r\nexport function getParentType(obj: object | Function) {\r\n\r\n    // get own type\r\n    var type = getType(obj);\r\n\r\n    // get parent type\r\n    return Object.getPrototypeOf(type.prototype).constructor;\r\n}\r\n\r\n/**\r\n * Test if an object is a plain object, i.e. is constructed by the built-in\r\n * Object constructor and inherits directly from Object.prototype or null. \r\n *\r\n * Some built-in objects pass the test, e.g. Math which is a plain object and\r\n * some host or exotic objects may pass also.\r\n * \r\n * https://stackoverflow.com/questions/5876332/how-can-i-differentiate-between-an-object-literal-other-javascript-objects\r\n */\r\nexport function isPlainObject(obj: any) {\r\n    if (!obj)\r\n        return false;\r\n\r\n    if (typeof obj !== 'object')\r\n        return false;\r\n\r\n    // if Object.getPrototypeOf supported, use it\r\n    if (typeof Object.getPrototypeOf === 'function') {\r\n        var proto = Object.getPrototypeOf(obj);\r\n        return proto === Object.prototype || proto === null;\r\n    }\r\n\r\n    // otherwise, use internal class\r\n    // this should be reliable as if getPrototypeOf not supported, is pre-ES5\r\n    return Object.prototype.toString.call(obj) === '[object Object]';\r\n}\r\n\r\nexport function toPlainObject(obj: any): any {\r\n    const json = JSON.stringify(obj, (key: any, value: any) => value === undefined ? null : value);\r\n    return JSON.parse(json);\r\n}\r\n\r\nexport function clearProperties(obj: any): void {\r\n    const keys = Object.keys(obj);\r\n    for (let key of keys) {\r\n        delete obj[key];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/utils.ts","export * from './defineProperty';\r\nexport * from './log';\r\nexport * from './simpleCombineReducers';\r\nexport * from './utils';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/index.ts","import { Component } from '../components';\r\nimport { SchemaOptions } from '../options';\r\nimport { CREATOR_INFO, getOwnSymbol, getSymbol, setSymbol } from '../symbols';\r\nimport { IMap } from '../types';\r\nimport { getConstructorOwnProp } from '../utils';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Metadata information stored on \"component creators\" - classes that were\r\n * decorated with the @component decorator. Since it is common to all instances\r\n * it is stored on the class constructor. It is used for the most part in the\r\n * component creation process.\r\n */\r\nexport class CreatorInfo {\r\n\r\n    //\r\n    // public static\r\n    //\r\n\r\n    public static getInfo(obj: object | Function): CreatorInfo {\r\n        if (!obj)\r\n            return undefined;\r\n\r\n        if (typeof obj === 'object') {\r\n            return getConstructorOwnProp(obj, CREATOR_INFO);\r\n        } else {\r\n            return getOwnSymbol(obj, CREATOR_INFO);\r\n        }\r\n    }\r\n\r\n    public static getOrInitInfo(obj: object | Function): CreatorInfo {\r\n\r\n        // get previous\r\n        var info = CreatorInfo.getInfo(obj);\r\n\r\n        // create if no previous\r\n        if (!info) {\r\n            const isConstructor = (typeof obj === 'function' ? true : false);\r\n            const target = (isConstructor ? obj : obj.constructor);\r\n            const baseInfo = getSymbol(target, CREATOR_INFO);\r\n            const selfInfo = Object.assign(new CreatorInfo(), baseInfo);\r\n            info = setSymbol(target, CREATOR_INFO, selfInfo);\r\n        }\r\n\r\n        return info;\r\n    }    \r\n\r\n    //\r\n    // instance members\r\n    //\r\n\r\n    public originalClass: Function;\r\n    public componentClass: typeof Component;\r\n    public options: SchemaOptions;\r\n    public noDispatch: IMap<boolean> = {};\r\n    public sequence: IMap<boolean> = {};\r\n    public childIds: any = {};\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/creatorInfo.ts","import { IMap, Method } from '../types';\r\nimport { getMethods, getParentType } from '../utils';\r\nimport { CreatorInfo } from '../info';\r\n\r\n// tslint:disable:ban-types\r\n\r\nexport function getCreatorMethods(obj: object | Function, inherit = true): IMap<Method> {\r\n\r\n    // ignore non-components\r\n    if (!CreatorInfo.getInfo(obj))\r\n        return undefined;\r\n\r\n    // get methods\r\n    var methods = getMethods(obj);\r\n    if (inherit) {\r\n\r\n        // with inheritance\r\n        var parentType = getParentType(obj);\r\n        while (parentType !== Object) {\r\n            var parentMethods = getCreatorMethods(parentType, false);\r\n            methods = Object.assign({}, parentMethods, methods);\r\n            parentType = getParentType(parentType);\r\n        }\r\n    }\r\n\r\n    return methods;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/creatorMethods.ts","export * from './classInfo';\r\nexport * from './componentInfo';\r\nexport * from './creatorInfo';\r\nexport * from './creatorMethods';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/index.ts","import { createStore, Store, StoreEnhancer } from 'redux';\r\nimport { CombineReducersContext, Component, ComponentCreationContext, ComponentReducer } from './components';\r\nimport { ComponentId, Computed, Connect, IgnoreState } from './decorators';\r\nimport { ComponentInfo } from './info';\r\nimport { AppOptions, globalOptions, GlobalOptions } from './options';\r\nimport { Constructor, IMap, Listener } from './types';\r\nimport { isPrimitive, log, toPlainObject } from './utils';\r\nconst getProp = require('lodash.get');\r\n\r\n// tslint:disable:ban-types\r\n\r\n//\r\n// internal\r\n//\r\n\r\nexport const ROOT_COMPONENT_PATH = 'root';\r\n\r\nexport const DEFAULT_APP_NAME = 'default';\r\n\r\nexport const appsRepository: IMap<ReduxApp<any>> = {};\r\n\r\nexport type AppWarehouse = Map<Function, Map<any, any>>;\r\n\r\nvar appsCount = 0;\r\n\r\nclass UpdateContext {\r\n\r\n    public visited = new Set();\r\n    public path = ROOT_COMPONENT_PATH;\r\n    public forceRecursion = false;\r\n\r\n    constructor(initial?: Partial<UpdateContext>) {\r\n        Object.assign(this, initial);\r\n    }\r\n}\r\n\r\n//\r\n// public\r\n//\r\n\r\nexport class ReduxApp<T extends object> {\r\n\r\n    //\r\n    // static\r\n    //\r\n\r\n    /**\r\n     * Global redux-app options\r\n     */\r\n    public static options: GlobalOptions = globalOptions;\r\n\r\n    public static createApp<T extends object>(appCreator: T, enhancer?: StoreEnhancer<T>): ReduxApp<T>;\r\n    public static createApp<T extends object>(appCreator: T, options: AppOptions, enhancer?: StoreEnhancer<T>): ReduxApp<T>;\r\n    public static createApp<T extends object>(appCreator: T, options: AppOptions, preloadedState: any, enhancer?: StoreEnhancer<T>): ReduxApp<T>;\r\n    public static createApp<T extends object>(appCreator: T, ...params: any[]): ReduxApp<T> {\r\n        return new ReduxApp(appCreator, ...params);\r\n    }\r\n\r\n    /**\r\n     * Get an existing ReduxApp instance.\r\n     * \r\n     * @param appId The name of the ReduxApp instance to retrieve. If not\r\n     * specified will return the default app.\r\n     */\r\n    public static getApp<T extends object = any>(appId?: string): ReduxApp<T> {\r\n        const applicationId = appId || DEFAULT_APP_NAME;\r\n        const app = appsRepository[applicationId];\r\n        if (!app) \r\n            log.debug(`[ReduxApp] Application '${applicationId}' does not exist.`);\r\n        return app;\r\n    }\r\n\r\n    /**\r\n     * @param type The type of the component.\r\n     * @param componentId The ID of the component (assuming the ID was assigned\r\n     * to the component by the 'withId' decorator). If not specified will get to\r\n     * the first available component of that type.\r\n     * @param appId The name of the ReduxApp instance to search in. If not\r\n     * specified will search in default app.\r\n     */\r\n    public static getComponent<T>(type: Constructor<T>, componentId?: string, appId?: string): T {\r\n        const app = ReduxApp.getApp(appId);\r\n        if (!app) \r\n            return undefined;\r\n\r\n        // get the component to connect\r\n        const warehouse = app.getTypeWarehouse(type);\r\n        if (componentId) {\r\n\r\n            // get by id\r\n            return warehouse.get(componentId);\r\n        } else {\r\n\r\n            // get the first value\r\n            return warehouse.values().next().value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * INTERNAL: Should not appear on the public d.ts file.\r\n     */\r\n    public static registerComponent(comp: Component, creator: object, appName?: string): void {\r\n        appName = appName || DEFAULT_APP_NAME;\r\n        const app = appsRepository[appName];\r\n        if (app) {  // this check exists for test reason only - in some unit tests we create orphan components that are not part of any app...\r\n            const warehouse = app.getTypeWarehouse(creator.constructor);\r\n            const key = ComponentInfo.getInfo(comp).id || ComponentId.nextAvailableId();\r\n            warehouse.set(key, comp);\r\n        }\r\n    }\r\n\r\n    //\r\n    // instance members\r\n    //\r\n\r\n    public readonly name: string;\r\n    /**\r\n     * The root component of the application.\r\n     */\r\n    public readonly root: T;\r\n    /**\r\n     * The underlying redux store.\r\n     */\r\n    public readonly store: Store<T>;\r\n\r\n    private readonly warehouse: AppWarehouse = new Map<Function, Map<any, any>>();\r\n\r\n    private initialStateUpdated = false;\r\n\r\n    private subscriptionDisposer: () => void;\r\n\r\n    //\r\n    // constructor\r\n    //\r\n\r\n    constructor(appCreator: T, enhancer?: StoreEnhancer<T>);\r\n    constructor(appCreator: T, options: AppOptions, enhancer?: StoreEnhancer<T>);\r\n    constructor(appCreator: T, options: AppOptions, preloadedState: any, enhancer?: StoreEnhancer<T>);\r\n    constructor(appCreator: T, ...params: any[]) {\r\n\r\n        // handle different overloads\r\n        var { options, preLoadedState, enhancer } = this.resolveParameters(appCreator, params);\r\n\r\n        // assign name and register self\r\n        this.name = this.getAppName(options.name);\r\n        if (appsRepository[this.name])\r\n            throw new Error(`An app with name '${this.name}' already exists.`);\r\n        appsRepository[this.name] = this;\r\n\r\n        // create the store        \r\n        const initialReducer = (state: any) => state;\r\n        this.store = createStore<T>(initialReducer as any, preLoadedState, enhancer);\r\n\r\n        // create the app\r\n        const creationContext = new ComponentCreationContext({ appName: this.name });\r\n        const rootComponent = Component.create(this.store, appCreator, creationContext);\r\n        this.root = (rootComponent as any);\r\n\r\n        // create the root reducer\r\n        const reducersContext = new CombineReducersContext({\r\n            componentPaths: Object.keys(creationContext.createdComponents)\r\n        });\r\n        const rootReducer = ComponentReducer.combineReducersTree(this.root, reducersContext);\r\n\r\n        // update the store\r\n        if (options.updateState) {\r\n            const stateListener = this.updateState(creationContext.createdComponents, reducersContext);\r\n            this.subscriptionDisposer = this.store.subscribe(stateListener);\r\n        }\r\n        this.store.replaceReducer(rootReducer);\r\n    }\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public dispose(): void {\r\n        if (this.subscriptionDisposer) {\r\n            this.subscriptionDisposer();\r\n            this.subscriptionDisposer = null;\r\n        }\r\n        if (appsRepository[this.name]) {\r\n            delete appsRepository[this.name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * INTERNAL: Should not appear on the public d.ts file.\r\n     */\r\n    public getTypeWarehouse(type: Function): Map<any, any> {\r\n        if (!this.warehouse.has(type))\r\n            this.warehouse.set(type, new Map());\r\n        return this.warehouse.get(type);\r\n    }\r\n\r\n    //\r\n    // private utils\r\n    //\r\n\r\n    private resolveParameters(appCreator: any, params: any[]) {\r\n        var result: {\r\n            options?: AppOptions,\r\n            preLoadedState?: T,\r\n            enhancer?: StoreEnhancer<T>\r\n        } = {};\r\n\r\n        if (params.length === 0) {\r\n\r\n            // no parameters\r\n            result.options = new AppOptions();\r\n            result.preLoadedState = appCreator;\r\n\r\n        } else if (params.length === 1) {\r\n\r\n            if (typeof params[0] === 'function') {\r\n\r\n                // only enhancer\r\n                result.options = new AppOptions();\r\n                result.enhancer = params[0];\r\n                result.preLoadedState = appCreator;\r\n\r\n            } else {\r\n\r\n                // only options\r\n                result.options = Object.assign(new AppOptions(), params[0]);\r\n                result.preLoadedState = appCreator;\r\n\r\n            }\r\n        } else if (params.length === 2) {\r\n\r\n            // options and pre-loaded state\r\n            result.options = Object.assign(new AppOptions(), params[0]);\r\n            result.preLoadedState = params[1];\r\n\r\n        } else {\r\n\r\n            // options, pre-loaded state and enhancer\r\n            result.options = Object.assign(new AppOptions(), params[0]);\r\n            result.preLoadedState = params[1];\r\n            result.enhancer = params[2];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private getAppName(name: string): string {\r\n        if (name)\r\n            return name;\r\n\r\n        if (!Object.keys(appsRepository).length) {\r\n            return DEFAULT_APP_NAME;\r\n        } else {\r\n            return DEFAULT_APP_NAME + '_' + (++appsCount);\r\n        }\r\n    }\r\n\r\n    //\r\n    // update state\r\n    //\r\n\r\n    private updateState(allComponents: IMap<Component>, reducersContext: CombineReducersContext): Listener {\r\n\r\n        const withComputedProps = Computed.filterComponents(Object.values(allComponents));\r\n\r\n        return () => {\r\n\r\n            //\r\n            // Reducers are invoked with regular objects, therefor we use this\r\n            // method which copies the resulted values back to the components.\r\n            //\r\n\r\n            const start = Date.now();\r\n\r\n            // update the application tree\r\n            const newState = this.store.getState();\r\n            if (!this.initialStateUpdated || !reducersContext.invoked) {\r\n\r\n                // initial state, state rehydration, time-travel debugging, etc. - update the entire tree\r\n                this.initialStateUpdated = true;\r\n                this.updateStateRecursion(this.root, newState, new UpdateContext({ forceRecursion: true }));\r\n            } else {\r\n\r\n                // standard update - update only changed components\r\n                this.updateChangedComponents({ [ROOT_COMPONENT_PATH]: newState }, reducersContext.changedComponents);\r\n            }\r\n\r\n            // because computed props may be dependant on connected props their\r\n            // calculation is postponed to after the entire app tree is up-to-date\r\n            Computed.computeProps(withComputedProps);\r\n\r\n            // reset reducers context\r\n            reducersContext.reset();\r\n\r\n            const end = Date.now();\r\n\r\n            log.debug(`[updateState] Component tree updated in ${end - start}ms.`);\r\n        };\r\n    }\r\n\r\n    private updateChangedComponents(newState: any, changedComponents: IMap<Component>): void {\r\n\r\n        const changedPaths = Object.keys(changedComponents);\r\n        const updateContext = new UpdateContext();\r\n\r\n        for (let path of changedPaths) {\r\n\r\n            const curComponent = changedComponents[path];\r\n            var newSubState = getProp(newState, path);\r\n\r\n            this.updateStateRecursion(curComponent, newSubState, {\r\n                ...updateContext,\r\n                path\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateStateRecursion(obj: any, newState: any, context: UpdateContext): any {\r\n\r\n        // same object\r\n        if (obj === newState)\r\n            return newState;\r\n\r\n        // primitive properties are updated by their owner objects\r\n        if (isPrimitive(obj) || isPrimitive(newState))\r\n            return newState;\r\n\r\n        // prevent endless loops on circular references\r\n        if (context.visited.has(obj))\r\n            return obj;\r\n        context.visited.add(obj);\r\n\r\n        // update\r\n        const newStateType = newState.constructor;\r\n\r\n        // convert to plain object (see comment on the option itself)\r\n        if (globalOptions.convertToPlainObject)\r\n            newState = toPlainObject(newState);\r\n\r\n        if (context.forceRecursion || (obj instanceof Component && newStateType === Object)) {\r\n\r\n            // update if new state is a plain object (so to keep methods while updating props)\r\n            var changeMessage: string;\r\n            if (Array.isArray(obj) && Array.isArray(newState)) {\r\n                changeMessage = this.updateArray(obj, newState, context);\r\n            } else {\r\n                changeMessage = this.updateObject(obj, newState, context);\r\n            }\r\n        } else {\r\n\r\n            // overwrite\r\n            obj = newState;\r\n            changeMessage = 'Object overwritten.';\r\n        }\r\n\r\n        // log changes\r\n        if (changeMessage && changeMessage.length) {\r\n            log.debug(`[updateState] Change in '${context.path}'. ${changeMessage}`);\r\n            log.verbose(`[updateState] New state: `, obj);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    private updateObject(obj: any, newState: any, context: UpdateContext): string {\r\n\r\n        // delete anything not in the new state\r\n        var propsDeleted: string[] = [];\r\n        Object.keys(obj).forEach(key => {\r\n\r\n            if (IgnoreState.isIgnoredProperty(obj, key))\r\n                return;\r\n\r\n            if (!newState.hasOwnProperty(key)) {\r\n                if (typeof obj[key] === 'function')\r\n                    log.warn(`[updateState] Function property removed in path: ${context.path}.${key}. Consider using a method instead.`);\r\n                delete obj[key];\r\n                propsDeleted.push(key);\r\n            }\r\n        });\r\n\r\n        // assign new state recursively\r\n        var propsAssigned: string[] = [];\r\n        Object.keys(newState).forEach(key => {\r\n\r\n            // state of connected components is update on their source\r\n            if (Connect.isConnectedProperty(obj, key))\r\n                return;\r\n\r\n            // see comment about computed properties in updateState\r\n            if (Computed.isComputedProperty(obj, key))\r\n                return;\r\n\r\n            if (IgnoreState.isIgnoredProperty(obj, key))\r\n                return;\r\n\r\n            var subState = newState[key];\r\n            var subObj = obj[key];\r\n\r\n            // must update recursively, otherwise we may lose children types (and methods...)\r\n            const newSubObj = this.updateStateRecursion(subObj, subState, {\r\n                ...context,\r\n                path: context.path + '.' + key\r\n            });\r\n\r\n            // assign only if changed, in case anyone is monitoring assignments\r\n            if (newSubObj !== subObj) {\r\n                obj[key] = newSubObj;\r\n                propsAssigned.push(key);\r\n            }\r\n        });\r\n\r\n        // report changes\r\n        if (propsAssigned.length || propsDeleted.length) {\r\n            const propsAssignedMessage = propsAssigned.length ? `Props assigned: ${propsAssigned.join(', ')}.` : '';\r\n            const propsDeleteMessage = propsDeleted.length ? `Props deleted: ${propsDeleted.join(', ')}.` : '';\r\n            const space = (propsAssigned.length && propsDeleted.length) ? ' ' : '';\r\n            return propsAssignedMessage + space + propsDeleteMessage;\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private updateArray(arr: any[], newState: any[], context: UpdateContext): string {\r\n\r\n        var changeMessage: string[] = [];\r\n\r\n        const prevLength = arr.length;\r\n        const newLength = newState.length;\r\n\r\n        // assign existing\r\n        var itemsAssigned: number[] = [];\r\n        for (let i = 0; i < Math.min(prevLength, newLength); i++) {\r\n            var subState = newState[i];\r\n            var subObj = arr[i];\r\n            const newSubObj = this.updateStateRecursion(subObj, subState, {\r\n                ...context,\r\n                path: context.path + '.' + i\r\n            });\r\n            if (newSubObj !== subObj) {\r\n                arr[i] = newSubObj;\r\n                itemsAssigned.push(i);\r\n            }\r\n        }\r\n        if (itemsAssigned.length)\r\n            changeMessage.push(`Assigned item(s) at indexes ${itemsAssigned.join(', ')}.`);\r\n\r\n        // add / remove\r\n        if (newLength > prevLength) {\r\n\r\n            // add new items\r\n            const newItems = newState.slice(prevLength);\r\n            Array.prototype.push.apply(arr, newItems);\r\n            changeMessage.push(`Added ${newLength - prevLength} item(s) at index ${prevLength}.`);\r\n\r\n        } else if (prevLength > newLength) {\r\n\r\n            // remove old items\r\n            arr.splice(newLength);\r\n            changeMessage.push(`Removed ${prevLength - newLength} item(s) at index ${newLength}.`);\r\n        }\r\n\r\n        // report changes\r\n        return changeMessage.join(' ');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/reduxApp.ts","import { DEFAULT_APP_NAME } from '../../reduxApp';\r\n\r\nexport class ConnectOptions {\r\n    /**\r\n     * The name of the ReduxApp instance to connect to.\r\n     * If not specified will connect to default app.\r\n     */\r\n    public app?= DEFAULT_APP_NAME;\r\n    /**\r\n     * The ID of the target component (assuming the ID was assigned to the\r\n     * component by the 'withId' decorator).\r\n     * If not specified will connect to the first available component of that type.\r\n     */\r\n    public id?: any;\r\n    /**\r\n     * The 'connect' decorator uses a getter to connect to the it's target. By\r\n     * default the getter is replaced with a standard value (reference) once the\r\n     * first non-empty value is retrieved. Set this value to true to leave the\r\n     * getter in place.\r\n     * Default value: false\r\n     */\r\n    public live?= false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/connectOptions.ts","import { Component } from '../../components';\r\nimport { ClassInfo, ComponentInfo } from '../../info';\r\nimport { IMap } from '../../types';\r\n\r\nexport class Connect {\r\n\r\n    public static readonly placeholderPrefix = '<connected';\r\n\r\n    public static isConnectedProperty(propHolder: object, propKey: string | symbol): boolean {\r\n        const info = ClassInfo.getInfo(propHolder);\r\n        return info && info.connectedProps[propKey];\r\n    }\r\n\r\n    public static setupConnectedProps(target: Component, targetInfo: ClassInfo, source: object, sourceInfo: ClassInfo): void {\r\n        if (!sourceInfo)\r\n            return;\r\n\r\n        // trigger connected props (necessary for connected props with initial 'undefined' value)\r\n        for (let propKey of Object.keys(sourceInfo.connectedProps)) {\r\n\r\n            // tslint:disable-next-line:no-unused-expression\r\n            (source as any)[propKey];\r\n            var desc = Object.getOwnPropertyDescriptor(source, propKey);\r\n            Object.defineProperty(target, propKey, desc);\r\n        }\r\n\r\n        // copy metadata\r\n        targetInfo.connectedProps = sourceInfo.connectedProps;\r\n    }\r\n\r\n    /**\r\n     * Returns a shallow clone of 'state' with it's connected props replaced with a placeholder.\r\n     */\r\n    public static removeConnectedProps(state: any, obj: any, connectedProps: IMap<any>): any {\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return state;\r\n\r\n        // populate output parameter\r\n        Object.assign(connectedProps, info.connectedProps);\r\n\r\n        // remove connected props\r\n        const newState = Object.assign({}, state);\r\n        for (let propKey of Object.keys(info.connectedProps)) {\r\n            \r\n            var sourceInfoString = '';\r\n            \r\n            var sourceInfo = ComponentInfo.getInfo(obj[propKey]);            \r\n            if (sourceInfo) {\r\n                var sourceIdString = (sourceInfo.id !== undefined ? '.' + sourceInfo.id : '');\r\n                sourceInfoString = '.' + sourceInfo.originalClass.name + sourceIdString;\r\n            }\r\n\r\n            newState[propKey] = Connect.placeholderPrefix + sourceInfoString + '>';\r\n        }\r\n        return newState;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/connect.ts","import 'reflect-metadata';\r\nimport { ClassInfo } from '../../info';\r\nimport { appsRepository, ReduxApp } from '../../reduxApp';\r\nimport { accessorDescriptor, dataDescriptor, deferredDefineProperty, log } from '../../utils';\r\nimport { ConnectOptions } from './connectOptions';\r\n\r\n/**\r\n * Property decorator. \r\n * \r\n * Connects the property to a component in the specified (or default) app.\r\n * \r\n * Usage Note: \r\n * \r\n * Connected properties can be thought of as pointers to other components. If\r\n * the connected property has an initial value assigned, it will be overridden\r\n * once the component is connected. One consequence of this fact is that there\r\n * must be at least one source component, i.e. there must be at least one\r\n * component of that type that has a value and is not decorated with the\r\n * 'connect' decorator.\r\n */\r\nexport function connect(options?: ConnectOptions): PropertyDecorator;\r\nexport function connect(target: any, propertyKey: string | symbol): void;\r\nexport function connect(targetOrOptions?: any, propertyKeyOrNothing?: string | symbol): any {\r\n    if (propertyKeyOrNothing) {\r\n        connectDecorator.call(undefined, targetOrOptions, propertyKeyOrNothing);\r\n    } else {\r\n        return (target: any, propertyKey: string | symbol) => connectDecorator(target, propertyKey, targetOrOptions);\r\n    }\r\n}\r\n\r\nfunction connectDecorator(target: any, propertyKey: string | symbol, options?: ConnectOptions) {\r\n\r\n    options = Object.assign(new ConnectOptions(), options);\r\n\r\n    // initial value\r\n    var value = target[propertyKey];\r\n\r\n    // mark as connected\r\n    //\r\n    // notes:\r\n    // 1. we mark to (among others) avoid duplicate storage in the store.\r\n    // 2. we don't use CreatorInfo here since it is what defines component\r\n    //    creators and standard classes may also use the connect decorator.\r\n    const info = ClassInfo.getOrInitInfo(target);\r\n    info.connectedProps[propertyKey] = true;\r\n\r\n    // get the property type \r\n    // (see 'metadata' section of https://www.typescriptlang.org/docs/handbook/decorators.html)\r\n    const type = Reflect.getMetadata(\"design:type\", target, propertyKey);\r\n    if (!type) {\r\n        const reflectErrMsg = `[connect] Failed to reflect type of property '${propertyKey}'. ` +\r\n            `Make sure you're using TypeScript and that the 'emitDecoratorMetadata' compiler ` +\r\n            `option in your tsconfig.json file is turned on. ` +\r\n            `Note that even if TypeScript is configured correctly it may fail to reflect ` +\r\n            `property types due to the loading order of your classes. ` +\r\n            `In that case, make sure that the type of '${propertyKey}' is loaded prior to the ` +\r\n            `type of it's containing class (${target.constructor.name}).`;\r\n        throw new Error(reflectErrMsg);\r\n    }\r\n\r\n    // remember old descriptor\r\n    const oldDescriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\r\n\r\n    // and replace it with a new descriptor\r\n    const newDescriptor = {\r\n        get: function (this: any) {\r\n\r\n            const result = ReduxApp.getComponent(type, options.id, options.app);\r\n\r\n            // once connected, replace getter with regular data descriptor\r\n            // (so that view frameworks such as Aurelia and Angular won't\r\n            // need to use dirty-checking)\r\n            if (result && !options.live) {\r\n\r\n                Object.defineProperty(this, propertyKey, dataDescriptor);\r\n                value = this[propertyKey] = result;\r\n                log.verbose(`[connect] Property '${propertyKey}' connected. Type: ${type.name}.`);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        set: (newValue: any) => {\r\n\r\n            // disconnection warning\r\n            const app = appsRepository[options.app];\r\n            if (app) {\r\n\r\n                // will only get here if 'live' option is on\r\n                log.warn(`[connect] Connected component '${propertyKey}' value assigned. Component disconnected.`);\r\n            }\r\n\r\n            // Set value.\r\n            // If called after connection it will disconnect the property.\r\n            // If called before connection will behave as the original property did.\r\n            if (oldDescriptor && oldDescriptor.set) {\r\n                return oldDescriptor.set(newValue);\r\n            } else if (!oldDescriptor || oldDescriptor && oldDescriptor.writable) {\r\n                return value = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    return deferredDefineProperty(target, propertyKey, Object.assign({}, accessorDescriptor, newDescriptor));\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/decorator.ts","export * from './connectOptions';\r\nexport * from './connect';\r\nexport * from './decorator';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/index.ts","import { CreatorInfo } from '../info';\r\nimport { SchemaOptions } from '../options';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Class decorator.\r\n */\r\nexport function component(ctor: Function): any;\r\nexport function component(options: SchemaOptions): any; // tslint:disable-line:unified-signatures\r\nexport function component(ctorOrOptions: Function | SchemaOptions): any {\r\n    if (typeof ctorOrOptions === 'function') {\r\n        componentDecorator.call(undefined, ctorOrOptions);\r\n    } else {\r\n        return (ctor: Function) => componentDecorator(ctor, ctorOrOptions);\r\n    }\r\n}\r\n\r\nfunction componentDecorator(ctor: Function, options?: SchemaOptions) {\r\n    const info = CreatorInfo.getOrInitInfo(ctor);\r\n    info.options = options;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/component.ts","import { Component } from '../components';\r\nimport { ClassInfo } from '../info';\r\nimport { globalOptions } from '../options';\r\nimport { IMap } from '../types';\r\nimport { dataDescriptor, deferredDefineProperty } from '../utils';\r\nvar isEqual = require('lodash.isequal');\r\n\r\n/**\r\n * Property decorator.\r\n * Computed values are computed each time the store state is changed.\r\n */\r\nexport function computed(target: any, propertyKey: string | symbol): void {\r\n    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\r\n\r\n    if (typeof descriptor.get !== 'function')\r\n        throw new Error(`Failed to decorate '${propertyKey}'. The 'computed' decorator should only be used on getters.`);\r\n\r\n    if (descriptor.set)\r\n        throw new Error(`Failed to decorate '${propertyKey}'. Decorated property should not have a setter.`);\r\n\r\n    // store getter for later\r\n    const info = ClassInfo.getOrInitInfo(target);\r\n    info.computedGetters[propertyKey] = descriptor.get;\r\n\r\n    // and replace it with a simple data descriptor\r\n    return deferredDefineProperty(target, propertyKey, dataDescriptor);\r\n}\r\n\r\nexport class Computed {\r\n\r\n    public static readonly placeholder = '<computed>';\r\n\r\n    public static isComputedProperty(propHolder: object, propKey: string | symbol): boolean {\r\n        const info = ClassInfo.getInfo(propHolder);\r\n        return info && (typeof info.computedGetters[propKey] === 'function');\r\n    }\r\n\r\n    /**\r\n     * Returns a shallow clone of 'state' with it's computed props replaced with\r\n     * Computed.placeholder.\r\n     */\r\n    public static removeComputedProps(state: any, obj: any, computedProps: IMap<any>): any {\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return state;\r\n\r\n        // populate output parameter\r\n        Object.assign(computedProps, info.computedGetters);\r\n\r\n        // remove computed props\r\n        const newState = Object.assign({}, state);\r\n        for (let propKey of Object.keys(info.computedGetters)) {\r\n            newState[propKey] = Computed.placeholder;\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    public static filterComponents(components: Component[]): Component[] {\r\n        return components.filter(comp => {\r\n            const info = ClassInfo.getInfo(comp);\r\n            return info && Object.keys(info.computedGetters);\r\n        });\r\n    }\r\n\r\n    public static computeProps(components: Component[]): void {\r\n        for (let comp of components) {\r\n            this.computeObjectProps(comp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Replace each computed property of 'obj' with it's current computed value.\r\n     */\r\n    private static computeObjectProps(obj: any): void {\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return;\r\n\r\n        for (let propKey of Object.keys(info.computedGetters)) {\r\n\r\n            // get old value\r\n            var getter = info.computedGetters[propKey];\r\n            var newValue = getter.call(obj);\r\n\r\n            // update if necessary\r\n            var oldValue = obj[propKey];\r\n            if (newValue !== oldValue && (!globalOptions.computed.deepComparison || !isEqual(newValue, oldValue))) {\r\n                obj[propKey] = newValue;\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/computed.ts","import { ClassInfo } from '../info';\r\nimport { IMap } from '../types';\r\n\r\n/**\r\n * Property decorator.\r\n * Instruct redux-app to not store this property in the store.\r\n */\r\nexport function ignoreState(target: object, propertyKey: string | symbol): void {\r\n\r\n    const info = ClassInfo.getOrInitInfo(target);\r\n    info.ignoreState[propertyKey] = true;\r\n}\r\n\r\nexport class IgnoreState {\r\n\r\n    public static isIgnoredProperty(propHolder: object, propKey: string | symbol): boolean {\r\n        const info = ClassInfo.getInfo(propHolder);\r\n        return info && info.ignoreState[propKey];\r\n    }\r\n\r\n    public static removeIgnoredProps(state: any, obj: any, ignoredProps: IMap<any>): any {\r\n\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return state;\r\n\r\n        // populate output parameter\r\n        Object.assign(ignoredProps, info.ignoreState);\r\n\r\n        // remove ignored props\r\n        const newState = Object.assign({}, state);\r\n        for (let propKey of Object.keys(info.ignoreState)) {\r\n            delete newState[propKey];\r\n        }\r\n        return newState;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/ignoreState.ts","import { CreatorInfo } from '../info';\r\n\r\n/**\r\n * Method decorator.\r\n * \r\n * Mark this method as a simple js method (not dispatching an action).\r\n */\r\nexport function noDispatch(target: object, propertyKey: string | symbol): void {\r\n    const info = CreatorInfo.getOrInitInfo(target);\r\n    info.noDispatch[propertyKey] = true;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/noDispatch.ts","import { CreatorInfo } from '../info';\r\n\r\n/**\r\n * Method decorator. \r\n * \r\n * The method will dispatch an action with the corresponding name but the\r\n * dispatched action will **not** trigger a reducer reaction. Instead, after the\r\n * dispatch process is done the method will be invoked as a regular one\r\n * (similarly to `noDispatch` methods).\r\n */\r\nexport function sequence(target: object, propertyKey: string | symbol): void {\r\n    const info = CreatorInfo.getOrInitInfo(target);\r\n    info.sequence[propertyKey] = true;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/sequence.ts","import { CreatorInfo } from '../info';\r\nimport { AUTO_ID } from '../symbols';\r\nimport { log } from '../utils';\r\n\r\nexport function withId(id?: any): PropertyDecorator;\r\nexport function withId(target: object, propertyKey: string | symbol): void;\r\nexport function withId(targetOrId: any, propertyKeyOrNothing?: string | symbol): any {\r\n    if (propertyKeyOrNothing) {\r\n        withIdDecorator.call(undefined, targetOrId, propertyKeyOrNothing);\r\n    } else {\r\n        return (target: object, propertyKey: string | symbol) => withIdDecorator(target, propertyKey, targetOrId);\r\n    }\r\n}\r\n\r\nfunction withIdDecorator(target: object, propertyKey: string | symbol, id?: any) {\r\n    const info = CreatorInfo.getOrInitInfo(target);\r\n    info.childIds[propertyKey] = id || AUTO_ID;\r\n}\r\n\r\nexport class ComponentId {\r\n\r\n    private static autoComponentId = 0;\r\n\r\n    public static nextAvailableId(): any {\r\n        return --ComponentId.autoComponentId; // using negative ids to decrease chance of collision with user assigned ids\r\n    }\r\n\r\n    public static getComponentId(parentCreator: object, path: string): any {\r\n\r\n        //\r\n        // Note: The component id is first stored on it's parent. It can be only\r\n        // assigned to it once the component itself has been constructed. The\r\n        // differed assigned resolves situations where the component is created\r\n        // inside it's parent constructor or injected via DI. This could have\r\n        // been solved with custom getter and setter but decided to go with this\r\n        // approach here.\r\n        //\r\n\r\n        // no parent\r\n        const pathArray = path.split('.');\r\n        if (!parentCreator || !pathArray.length)\r\n            return undefined;\r\n\r\n        // parent is not a component creator\r\n        const info = CreatorInfo.getInfo(parentCreator);\r\n        if (!info)\r\n            return;\r\n\r\n        const selfKey = pathArray[pathArray.length - 1];\r\n        const id = info.childIds[selfKey];\r\n\r\n        // the specific component was not assigned an id\r\n        if (!id)\r\n            return undefined;\r\n\r\n        // auto id\r\n        if (id === AUTO_ID) {\r\n            const generatedId = ComponentId.nextAvailableId();\r\n            log.verbose('[getComponentId] new component id generated: ' + generatedId);\r\n            info.childIds[selfKey] = generatedId;\r\n            return generatedId;\r\n        }\r\n\r\n        // manual id\r\n        return id;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/withId.ts","export * from './connect';\r\nexport * from './component';\r\nexport * from './computed';\r\nexport * from './ignoreState';\r\nexport * from './noDispatch';\r\nexport * from './sequence';\r\nexport * from './withId';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/index.ts","import { Reducer, ReducersMapObject } from 'redux';\r\nimport { Computed, Connect, IgnoreState } from '../decorators';\r\nimport { ComponentInfo, CreatorInfo, getCreatorMethods } from '../info';\r\nimport { ROOT_COMPONENT_PATH } from '../reduxApp';\r\nimport { IMap, Listener, Method } from '../types';\r\nimport { clearProperties, getMethods, isPrimitive, log, simpleCombineReducers } from '../utils';\r\nimport { ComponentActions, ReduxAppAction } from './actions';\r\nimport { Component } from './component';\r\n\r\n// tslint:disable:member-ordering ban-types\r\n\r\nexport type ReducerCreator = (changeListener: Listener<Component>) => Reducer<object>;\r\n\r\nexport class CombineReducersContext {\r\n\r\n    public visited = new Set();\r\n    public path = ROOT_COMPONENT_PATH;\r\n    public componentPaths: string[] = [];\r\n    public changedComponents: IMap<Component> = {};\r\n    public invoked = false;\r\n\r\n    constructor(initial?: Partial<CombineReducersContext>) {\r\n        Object.assign(this, initial);\r\n    }\r\n\r\n    public reset(): void {\r\n        clearProperties(this.changedComponents);\r\n        this.invoked = false;\r\n    }\r\n}\r\n\r\nexport class ComponentReducer {\r\n\r\n    private static readonly identityReducer = (state: any) => state;\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public static createReducer(component: Component, componentCreator: object): ReducerCreator {\r\n\r\n        const creatorInfo = CreatorInfo.getInfo(componentCreator);\r\n        if (!creatorInfo)\r\n            throw new Error(`Inconsistent component '${componentCreator.constructor.name}'. The 'component' class decorator is missing.`);\r\n\r\n        const methods = ComponentReducer.createMethodsLookup(componentCreator, creatorInfo);\r\n        const stateProto = ComponentReducer.createStateObjectPrototype(component, creatorInfo);\r\n        const componentId = ComponentInfo.getInfo(component).id;\r\n        \r\n        return (changeListener: Listener<Component>) => {\r\n\r\n            // the reducer\r\n            return (state: object, action: ReduxAppAction) => {\r\n\r\n                log.verbose(`[reducer] Reducer of: ${componentCreator.constructor.name}, action: ${action.type}`);\r\n\r\n                // initial state\r\n                if (state === undefined) {\r\n                    log.verbose('[reducer] State is undefined, returning initial value');\r\n                    return component;\r\n                }\r\n\r\n                // check component id\r\n                if (componentId !== action.id) {\r\n                    log.verbose(`[reducer] Component id and action.id don't match (${componentId} !== ${action.id})`);\r\n                    return state;\r\n                }\r\n\r\n                // check if should use this reducer\r\n                const actionReducer = methods[action.type];\r\n                if (!actionReducer) {\r\n                    log.verbose('[reducer] No matching action in this reducer, returning previous state');\r\n                    return state;\r\n                }\r\n\r\n                // call the action-reducer with the new state as the 'this' argument\r\n                const newState = ComponentReducer.createStateObject(state, stateProto);\r\n                actionReducer.call(newState, ...action.payload);\r\n\r\n                // notify changes\r\n                changeListener(component);\r\n\r\n                // return new state                \r\n                log.verbose('[reducer] Reducer invoked, returning new state');\r\n                return newState;\r\n            };\r\n        };\r\n    }\r\n\r\n    public static combineReducersTree(root: Component, context: CombineReducersContext): Reducer<any> {\r\n\r\n        const reducer = ComponentReducer.combineReducersRecursion(root, context);\r\n\r\n        return (state: any, action: ReduxAppAction) => {\r\n            const start = Date.now();\r\n\r\n            context.invoked = true;\r\n            log.debug(`[rootReducer] Reducing action: ${action.type}.`);\r\n\r\n            let newState = reducer(state, action);\r\n            newState = ComponentReducer.finalizeState(newState, root);\r\n\r\n            const end = Date.now();\r\n            log.debug(`[rootReducer] Reducer tree processed in ${end - start}ms.`);\r\n\r\n            return newState;\r\n        };\r\n    }\r\n\r\n    //\r\n    // private methods - state object\r\n    //\r\n    \r\n    private static createMethodsLookup(componentCreator: object, creatorInfo: CreatorInfo): IMap<Function> {\r\n        \r\n        const allMethods = getCreatorMethods(componentCreator);        \r\n\r\n        const options = creatorInfo.options;\r\n        const actionMethods: IMap<Function> = {};\r\n        Object.keys(allMethods).forEach(methName => {\r\n\r\n            // reducers does not handle 'noDispatch' and 'sequence' methods\r\n            if (creatorInfo.noDispatch[methName] || creatorInfo.sequence[methName])\r\n                return;\r\n\r\n            var actionName = ComponentActions.getActionName(componentCreator, methName, options);\r\n            actionMethods[actionName] = allMethods[methName];\r\n        });\r\n\r\n        return actionMethods;\r\n    }\r\n\r\n    /**\r\n     * See description of 'createStateObject'.\r\n     */\r\n    private static createStateObjectPrototype(component: Component, creatorInfo: CreatorInfo): object {\r\n        const stateProto: IMap<Method> = {};\r\n        const componentMethods = getMethods(component);\r\n        for (let key of Object.keys(componentMethods)) {\r\n            if (creatorInfo.noDispatch[key]) {\r\n                stateProto[key] = componentMethods[key].bind(component);\r\n            } else {\r\n                stateProto[key] = ComponentReducer.actionInvokedError;\r\n            }\r\n        }\r\n        return stateProto;\r\n    }\r\n\r\n    private static actionInvokedError() {\r\n        throw new Error(\"Only 'noDispatch' methods can be invoked inside actions.\");\r\n    }\r\n\r\n    /**\r\n     * Create a \"state object\". The state object receives it's properties from\r\n     * the current state and it's methods from the owning component. Methods\r\n     * that represent actions are replace with a throw call, while noDispatch\r\n     * methods are kept in place.\r\n     */\r\n    private static createStateObject(state: object, stateProto: object): object {\r\n        const stateObj = Object.create(stateProto);\r\n        Object.assign(stateObj, state);\r\n        return stateObj;\r\n    }\r\n\r\n    //\r\n    // private methods - combine reducers\r\n    //\r\n\r\n    private static combineReducersRecursion(obj: any, context: CombineReducersContext): Reducer<any> {\r\n\r\n        // no need to search inside primitives\r\n        if (isPrimitive(obj))\r\n            return undefined;\r\n\r\n        // prevent endless loops on circular references\r\n        if (context.visited.has(obj))\r\n            return undefined;\r\n        context.visited.add(obj);\r\n\r\n        // ignore branches with no descendant components\r\n        if (!context.componentPaths.some(path => path.startsWith(context.path)))\r\n            return ComponentReducer.identityReducer;\r\n\r\n        // get the root reducer\r\n        let rootReducer: Reducer<any>;\r\n        const info = ComponentInfo.getInfo(obj as any);\r\n        if (info) {\r\n            rootReducer = info.reducerCreator(comp => {\r\n                context.changedComponents[context.path] = comp;\r\n            });\r\n        } else {\r\n            rootReducer = ComponentReducer.identityReducer;\r\n        }\r\n\r\n        // gather the sub-reducers\r\n        const subReducers: ReducersMapObject = {};\r\n        for (let key of Object.keys(obj)) {\r\n\r\n            // connected components are modified only by their source\r\n            if (Connect.isConnectedProperty(obj, key))\r\n                continue;\r\n\r\n            // other objects\r\n            const newSubReducer = ComponentReducer.combineReducersRecursion((obj as any)[key], new CombineReducersContext({\r\n                ...context,\r\n                path: (context.path === '' ? key : context.path + '.' + key)\r\n            }));\r\n            if (typeof newSubReducer === 'function')\r\n                subReducers[key] = newSubReducer;\r\n        }\r\n\r\n        let resultReducer = rootReducer;\r\n\r\n        // combine reducers\r\n        if (Object.keys(subReducers).length) {\r\n            const combinedSubReducer = simpleCombineReducers(subReducers);\r\n\r\n            resultReducer = (state: object, action: ReduxAppAction) => {\r\n\r\n                const thisState = rootReducer(state, action);\r\n                const subStates = combinedSubReducer(thisState, action);\r\n\r\n                // merge self and sub states\r\n                const combinedState = ComponentReducer.mergeState(thisState, subStates);\r\n\r\n                return combinedState;\r\n            };\r\n        }\r\n\r\n        return resultReducer;\r\n    }\r\n\r\n    private static mergeState(state: any, subStates: any): any {\r\n\r\n        if (Array.isArray(state) && Array.isArray(subStates)) {\r\n\r\n            // merge arrays\r\n            for (let i = 0; i < subStates.length; i++)\r\n                state[i] = subStates[i];\r\n            return state;\r\n\r\n        } else {\r\n\r\n            // merge objects\r\n            return {\r\n                ...state,\r\n                ...subStates\r\n            };\r\n        }\r\n    }\r\n\r\n    private static finalizeState(rootState: any, root: Component): any {\r\n        return ComponentReducer.finalizeStateRecursion(rootState, root, new Set());\r\n    }\r\n\r\n    private static finalizeStateRecursion(state: any, obj: any, visited: Set<any>): any {\r\n\r\n        // primitive properties are updated by their owner objects\r\n        if (isPrimitive(state) || isPrimitive(obj))\r\n            return state;\r\n\r\n        // prevent endless loops on circular references\r\n        if (visited.has(state))\r\n            return state;\r\n        visited.add(state);\r\n\r\n        const handledProps = {};\r\n        state = Connect.removeConnectedProps(state, obj, handledProps);\r\n        state = Computed.removeComputedProps(state, obj, handledProps);\r\n        state = IgnoreState.removeIgnoredProps(state, obj, handledProps);\r\n\r\n        // transform children\r\n        Object.keys(state).forEach(key => {\r\n\r\n            // skip already handled properties\r\n            if (handledProps.hasOwnProperty(key))\r\n                return;\r\n\r\n            var subState = state[key];\r\n            var subObj = obj[key];\r\n            var newSubState = ComponentReducer.finalizeStateRecursion(subState, subObj, visited);\r\n\r\n            // assign only if changed\r\n            if (newSubState !== subState) {\r\n                state[key] = newSubState;\r\n            }\r\n        });\r\n\r\n        return state;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/reducer.ts","import { Store } from 'redux';\r\nimport { ComponentId, Connect } from '../decorators';\r\nimport { ClassInfo, ComponentInfo, CreatorInfo } from '../info';\r\nimport { globalOptions } from '../options';\r\nimport { ReduxApp, ROOT_COMPONENT_PATH } from '../reduxApp';\r\nimport { IMap } from '../types';\r\nimport { isPrimitive, log } from '../utils';\r\nimport { ComponentActions } from './actions';\r\nimport { ComponentReducer } from './reducer';\r\n\r\nexport class ComponentCreationContext {\r\n    \r\n    public visited = new Set();\r\n    public path = ROOT_COMPONENT_PATH;\r\n    public appName: string;\r\n    public parentCreator: object;    \r\n    public createdComponents: IMap<Component> = {};\r\n\r\n    constructor(initial?: Partial<ComponentCreationContext>) {\r\n        Object.assign(this, initial);\r\n    }\r\n}\r\n\r\nexport class Component {\r\n\r\n    //\r\n    // static methods\r\n    //\r\n\r\n    public static create(store: Store<any>, creator: object, context?: ComponentCreationContext): Component {\r\n\r\n        context = Object.assign(new ComponentCreationContext(), context);\r\n\r\n        // create the component        \r\n        var ComponentClass = Component.getComponentClass(creator);  // tslint:disable-line:variable-name\r\n        const component = new ComponentClass(store, creator, context as ComponentCreationContext);\r\n\r\n        // register it on it's containing app\r\n        ReduxApp.registerComponent(component, creator, context.appName);\r\n\r\n        return component;\r\n    }\r\n\r\n    private static getComponentClass(creator: object): typeof Component {\r\n        var info = CreatorInfo.getInfo(creator);\r\n        if (!info.componentClass) {\r\n            info.componentClass = Component.createComponentClass(creator);\r\n            info.originalClass = creator.constructor;\r\n        }\r\n        return info.componentClass;\r\n    }\r\n\r\n    private static createComponentClass(creator: object) {\r\n\r\n        // declare new class\r\n        class ComponentClass extends Component {\r\n            public __originalClassName__ = creator.constructor.name; // tslint:disable-line:variable-name\r\n\r\n            constructor(store: Store<any>, creatorArg: object, context: ComponentCreationContext) {\r\n                super(store, creatorArg, context);\r\n\r\n                if (!globalOptions.emitClassNames)\r\n                    delete this.__originalClassName__;\r\n            }\r\n        }\r\n\r\n        // patch it's prototype\r\n        const actions = ComponentActions.createActions(creator);\r\n        Object.assign(ComponentClass.prototype, actions);\r\n\r\n        return ComponentClass;\r\n    }\r\n\r\n    private static createSelf(component: Component, store: Store<object>, creator: object, context: ComponentCreationContext): void {\r\n\r\n        // regular js props (including getters and setters)\r\n        for (let key of Object.getOwnPropertyNames(creator)) {\r\n            var desc = Object.getOwnPropertyDescriptor(creator, key);\r\n            Object.defineProperty(component, key, desc);\r\n        }\r\n\r\n        // init component info        \r\n        const selfInfo = ComponentInfo.initInfo(component);\r\n        const selfClassInfo = ClassInfo.getOrInitInfo(component);\r\n\r\n        // copy info from creator\r\n        const creatorInfo = CreatorInfo.getInfo(creator);\r\n        const creatorClassInfo = ClassInfo.getInfo(creator) || new ClassInfo();\r\n\r\n        selfInfo.id = ComponentId.getComponentId(context.parentCreator, context.path);\r\n        selfInfo.originalClass = creatorInfo.originalClass;\r\n        selfClassInfo.computedGetters = creatorClassInfo.computedGetters;\r\n        selfClassInfo.ignoreState = creatorClassInfo.ignoreState;\r\n\r\n        // connected props\r\n        Connect.setupConnectedProps(component, selfClassInfo, creator, creatorClassInfo);\r\n\r\n        // dispatch\r\n        selfInfo.dispatch = store.dispatch;\r\n\r\n        // reducer\r\n        selfInfo.reducerCreator = ComponentReducer.createReducer(component, creator);\r\n    }\r\n\r\n    private static createSubComponents(obj: any, store: Store<object>, creator: object, context: ComponentCreationContext): void {\r\n\r\n        // no need to search inside primitives\r\n        if (isPrimitive(obj))\r\n            return;\r\n\r\n        // prevent endless loops on circular references\r\n        if (context.visited.has(obj))\r\n            return;\r\n        context.visited.add(obj);\r\n\r\n        // traverse object children\r\n        const searchIn = creator || obj;\r\n        for (let key of Object.keys(searchIn)) {\r\n\r\n            const connectionInfo = Connect.isConnectedProperty(obj, key);\r\n            if (connectionInfo)\r\n                continue;\r\n\r\n            var subPath = context.path + '.' + key;\r\n\r\n            var subCreator = searchIn[key];\r\n            if (CreatorInfo.getInfo(subCreator)) {\r\n\r\n                // child is sub-component\r\n                obj[key] = Component.create(store, subCreator, {\r\n                    ...context,\r\n                    parentCreator: creator,\r\n                    path: subPath\r\n                });\r\n            } else {\r\n\r\n                // child is regular object, nothing special to do with it\r\n                Component.createSubComponents(obj[key], store, null, {\r\n                    ...context,\r\n                    parentCreator: null,\r\n                    path: subPath\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    //\r\n    // constructor\r\n    //\r\n\r\n    private constructor(store: Store<any>, creator: object, context: ComponentCreationContext) {\r\n\r\n        if (!CreatorInfo.getInfo(creator))\r\n            throw new Error(`Argument '${\"creator\"}' is not a component creator. Did you forget to use the decorator?`);\r\n\r\n        Component.createSelf(this, store, creator, context);\r\n        Component.createSubComponents(this, store, creator, context);\r\n\r\n        context.createdComponents[context.path] = this;\r\n        \r\n        log.verbose(`[Component] New ${creator.constructor.name} component created. Path: ${context.path}`);\r\n    }\r\n\r\n    // \r\n    // Note: Component methods are static so that they will not be exposed unnecessarily through the prototype chain.\r\n    //\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/component.ts","import { Action } from 'redux';\r\nimport { ComponentInfo, CreatorInfo, getCreatorMethods } from '../info';\r\nimport { globalOptions, SchemaOptions } from '../options';\r\nimport { IMap, Method } from '../types';\r\nimport { Component } from './component';\r\nvar snakecase = require('lodash.snakecase');\r\n\r\n// tslint:disable-next-line:interface-name\r\nexport interface ReduxAppAction extends Action {\r\n    id: any;\r\n    payload: any[];\r\n}\r\n\r\nexport class ComponentActions {\r\n\r\n    public static createActions(creator: object): IMap<Method> {\r\n        const methods = getCreatorMethods(creator);\r\n        if (!methods)\r\n            return undefined;\r\n\r\n        const creatorInfo = CreatorInfo.getInfo(creator);\r\n        const componentActions: any = {};\r\n        Object.keys(methods).forEach(key => {\r\n            componentActions[key] = function (this: Component, ...payload: any[]): void {\r\n\r\n                // verify 'this' arg\r\n                if (!(this instanceof Component))\r\n                    throw new Error(`Component method invoked with non-Component as 'this'. Bound 'this' argument is: ${this}`);\r\n\r\n                const oldMethod = methods[key];\r\n\r\n                // handle dispatch methods (use store dispatch)\r\n                if (!creatorInfo.noDispatch[key]) {                    \r\n                    const compInfo = ComponentInfo.getInfo(this);\r\n                    const action: ReduxAppAction = {\r\n                        type: ComponentActions.getActionName(creator, key, creatorInfo.options),\r\n                        id: (compInfo ? compInfo.id : undefined),\r\n                        payload: payload\r\n                    };\r\n                    compInfo.dispatch(action);\r\n                }\r\n\r\n                // handle non-dispatch methods (just call the function)\r\n                if (creatorInfo.noDispatch[key] || creatorInfo.sequence[key]) {                    \r\n                    return oldMethod.call(this, ...payload);\r\n                }\r\n            };\r\n        });\r\n\r\n        return componentActions;\r\n    }\r\n\r\n    public static getActionName(creator: object, methodName: string, options?: SchemaOptions): string {\r\n        options = Object.assign(new SchemaOptions(), globalOptions.schema, options);\r\n\r\n        var actionName = methodName;\r\n        var actionNamespace = creator.constructor.name;\r\n\r\n        if (options.uppercaseActions) {\r\n            actionName = snakecase(actionName).toUpperCase();\r\n            actionNamespace = snakecase(actionNamespace).toUpperCase();\r\n        }\r\n\r\n        if (options.actionNamespace) {\r\n            actionName = actionNamespace + options.actionNamespaceSeparator + actionName;\r\n        }\r\n\r\n        return actionName;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/actions.ts","import { ComponentInfo } from '../info';\r\n\r\n// tslint:disable-next-line:ban-types\r\nexport function isInstanceOf(obj: any, type: Function): boolean {\r\n    if (obj instanceof type)\r\n        return true;\r\n\r\n    const info = ComponentInfo.getInfo(obj);\r\n    return !!(info && info.originalClass === type);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/utils.ts","export * from './actions';\nexport * from './component';\nexport * from './reducer';\nexport * from './utils';\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/index.ts","export { isInstanceOf } from './components';\r\nexport { component, connect, computed, ignoreState, noDispatch, sequence, withId } from './decorators';\r\nexport { SchemaOptions, ComputedOptions, AppOptions, GlobalOptions, LogLevel } from './options';\r\nexport { ReduxApp } from './reduxApp';\r\nexport { getMethods } from './utils';\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/index.ts","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"lodash.get\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.get\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"reflect-metadata\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"reflect-metadata\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"lodash.isequal\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.isequal\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"lodash.snakecase\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.snakecase\"\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}