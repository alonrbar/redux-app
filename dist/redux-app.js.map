{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap f28f66516e6767bec305","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\options.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\symbols.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\reduxApp.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\actions.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\component.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\connectOptions.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\reducer.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\index.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\classInfo.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\componentInfo.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\info\\creatorInfo.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\defineProperty.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\log.ts","external \"lodash.snakecase\"","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\simpleCombineReducers.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\index.ts","external \"redux\"","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\connect.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\connect\\decorator.ts","external \"reflect-metadata\"","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\component.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\computed.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\noDispatch.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\decorators\\withId.ts","C:\\Users\\Alon\\Documents\\devel\\redux-app\\src\\components\\utils.ts"],"names":[],"mappings":"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","file":"redux-app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"redux-app\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"redux-app\"] = factory();\n\telse\n\t\troot[\"redux-app\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f28f66516e6767bec305","export * from './classInfo';\r\nexport * from './componentInfo';\r\nexport * from './creatorInfo';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/index.ts","export * from './defineProperty';\r\nexport * from './log';\r\nexport * from './simpleCombineReducers';\r\nexport * from './utils';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/index.ts","var snakecase = require('lodash.snakecase');\r\n\r\n//\r\n// schema options\r\n//\r\n\r\nexport class SchemaOptions {\r\n    /**\r\n     * Add the class name of the object that holds the action to the action name.\r\n     * Format: <class name>.<action name>\r\n     * Default value: true.\r\n     */\r\n    public actionNamespace? = true;\r\n    /**\r\n     * Use redux style action names. For instance, if a component defines a\r\n     * method called 'incrementCounter' the matching action name will be\r\n     * 'INCREMENT_COUNTER'.\r\n     * Default value: true.\r\n     */\r\n    public uppercaseActions? = true;    \r\n}\r\n\r\nexport function getActionName(creator: object, methodName: string, options: SchemaOptions): string {\r\n    var actionName = methodName;\r\n    var actionNamespace = creator.constructor.name;\r\n\r\n    if (options.uppercaseActions) {\r\n        actionName = snakecase(actionName).toUpperCase();\r\n        actionNamespace = snakecase(actionNamespace).toUpperCase();\r\n    }\r\n\r\n    if (options.actionNamespace) {\r\n        actionName = actionNamespace + '.' + actionName;\r\n    }\r\n\r\n    return actionName;\r\n}\r\n\r\n//\r\n// app options\r\n//\r\n\r\nexport class AppOptions {\r\n    /**\r\n     * Name of the newly created app.\r\n     */\r\n    public name?: string;\r\n    /**\r\n     * By default each component is assigned (with some optimizations) with it's\r\n     * relevant sub state on each store change. Set this to false to disable\r\n     * this updating process. The store's state will still be updated as usual\r\n     * and can always be retrieved using store.getState().\r\n     * Default value: true.\r\n     */\r\n    public updateState? = true;\r\n}\r\n\r\n//\r\n// global options\r\n//\r\n\r\nexport enum LogLevel {\r\n    /**\r\n     * Emit no logs\r\n     */\r\n    None = 0,\r\n    Verbose = 1,    \r\n    Debug = 2,\r\n    Warn = 5,\r\n    /**\r\n     * Emit no logs (same as None)\r\n     */\r\n    Silent = 10\r\n}\r\n\r\nexport class GlobalOptions {\r\n    /**\r\n     * Default value: LogLevel.Warn\r\n     */\r\n    public logLevel = LogLevel.Warn;\r\n    /**\r\n     * When set to 'true' every component will have an additional __originalClassName__ property.\r\n     * Can be useful for debugging.\r\n     * Default value: false.\r\n     */\r\n    public emitClassNames = false;\r\n    /**\r\n     * Global defaults.\r\n     * Options supplied explicitly via the decorator will override options specified here.\r\n     */\r\n    public schema = new SchemaOptions();\r\n}\r\n\r\nexport const globalOptions = new GlobalOptions();\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/options.ts","\r\nexport function setSymbol<T>(obj: any, symbol: symbol, value: T): T {\r\n    return obj[symbol] = value;\r\n}\r\n\r\nexport function getSymbol(obj: any, symbol: symbol): any {\r\n    return obj[symbol];\r\n}\r\n\r\n/**\r\n * Stored on component instances.\r\n */\r\nexport const COMPONENT_INFO = Symbol('REDUX-APP.COMPONENT_INFO');\r\n/**\r\n * Stored on creators constructor.\r\n */\r\nexport const CREATOR_INFO = Symbol('REDUX-APP.CREATOR_INFO');\r\n/**\r\n * Stored on other classes.\r\n */\r\nexport const CLASS_INFO = Symbol('REDUX-APP.CLASS_INFO');\r\nexport const AUTO_ID = Symbol('REDUX-APP.AUTO_ID');\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/symbols.ts","export * from './connect';\r\nexport * from './component';\r\nexport * from './computed';\r\nexport * from './noDispatch';\r\nexport * from './withId';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/index.ts","import { createStore, Store, StoreEnhancer } from 'redux';\r\nimport { Component, ComponentReducer } from './components';\r\nimport { ComponentId, Computed, Connect } from './decorators';\r\nimport { ComponentInfo } from './info';\r\nimport { AppOptions, globalOptions, GlobalOptions } from './options';\r\nimport { IMap } from './types';\r\nimport { isPrimitive, log, pathString, toPlainObject } from './utils';\r\n\r\n// tslint:disable:ban-types\r\n\r\n//\r\n// internal\r\n//\r\n\r\nexport const DEFAULT_APP_NAME = 'default';\r\n\r\nexport const appsRepository: IMap<ReduxApp<any>> = {};\r\n\r\nvar appsCount = 0;\r\n\r\nexport type AppWarehouse = Map<Function, Map<any, any>>;\r\n\r\n//\r\n// public\r\n//\r\n\r\nexport class ReduxApp<T extends object> {\r\n\r\n    //\r\n    // static\r\n    //\r\n\r\n    /**\r\n     * Global redux-app options\r\n     */\r\n    public static options: GlobalOptions = globalOptions;\r\n\r\n    public static createApp<T extends object>(appCreator: T, enhancer?: StoreEnhancer<T>): ReduxApp<T>;\r\n    public static createApp<T extends object>(appCreator: T, options: AppOptions, enhancer?: StoreEnhancer<T>): ReduxApp<T>;\r\n    public static createApp<T extends object>(appCreator: T, options: AppOptions, preloadedState: any, enhancer?: StoreEnhancer<T>): ReduxApp<T>;\r\n    public static createApp<T extends object>(appCreator: T, ...params: any[]): ReduxApp<T> {\r\n        return new ReduxApp(appCreator, ...params);\r\n    }\r\n\r\n    /**\r\n     * INTERNAL: Should not appear on the public d.ts file.\r\n     */\r\n    public static registerComponent(comp: Component, creator: object, path: string[]): void {\r\n        const appName = path[0] || DEFAULT_APP_NAME;\r\n        const app = appsRepository[appName];\r\n        if (app) {  // this check exists for test reason only - in some unit tests we create orphan components that are not part of any app...\r\n            const warehouse = app.getTypeWarehouse(creator.constructor);\r\n            const key = ComponentInfo.getInfo(comp).id || ComponentId.nextAvailableId();\r\n            warehouse.set(key, comp);\r\n        }\r\n    }\r\n\r\n    //\r\n    // instance members\r\n    //\r\n\r\n    public readonly name: string;\r\n    /**\r\n     * The root component of the application.\r\n     */\r\n    public readonly root: T;\r\n    /**\r\n     * The underlying redux store.\r\n     */\r\n    public readonly store: Store<T>;\r\n\r\n    private readonly warehouse: AppWarehouse = new Map<Function, Map<any, any>>();\r\n\r\n    private subscriptionDisposer: () => void;\r\n\r\n    //\r\n    // constructor\r\n    //\r\n\r\n    constructor(appCreator: T, enhancer?: StoreEnhancer<T>);\r\n    constructor(appCreator: T, options: AppOptions, enhancer?: StoreEnhancer<T>);\r\n    constructor(appCreator: T, options: AppOptions, preloadedState: any, enhancer?: StoreEnhancer<T>);\r\n    constructor(appCreator: T, ...params: any[]) {\r\n\r\n        // handle different overloads\r\n        var { options, preLoadedState, enhancer } = this.resolveParameters(appCreator, params);\r\n\r\n        // assign name and register self\r\n        this.name = this.getAppName(options.name);\r\n        if (appsRepository[this.name])\r\n            throw new Error(`An app with name '${this.name}' already exists.`);\r\n        appsRepository[this.name] = this;\r\n\r\n        // create the store        \r\n        const initialReducer = (state: any) => state;\r\n        this.store = createStore<T>(initialReducer as any, preLoadedState, enhancer);\r\n\r\n        // create the app\r\n        const rootComponent = Component.create(this.store, appCreator, null, [this.name]);\r\n        this.root = (rootComponent as any);\r\n\r\n        // state        \r\n        if (options.updateState) {\r\n            this.subscriptionDisposer = this.store.subscribe(() => this.updateState());\r\n        }\r\n\r\n        // update the store\r\n        const actualReducer = ComponentReducer.combineReducersTree(rootComponent);\r\n        this.store.replaceReducer(actualReducer);\r\n    }\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public dispose(): void {\r\n        if (this.subscriptionDisposer) {\r\n            this.subscriptionDisposer();\r\n            this.subscriptionDisposer = null;\r\n        }\r\n        if (appsRepository[this.name]) {\r\n            delete appsRepository[this.name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * INTERNAL: Should not appear on the public d.ts file.\r\n     */\r\n    public getTypeWarehouse(type: Function): Map<any, any> {\r\n        if (!this.warehouse.has(type))\r\n            this.warehouse.set(type, new Map());\r\n        return this.warehouse.get(type);\r\n    }\r\n\r\n    //\r\n    // private utils\r\n    //\r\n\r\n    private resolveParameters(appCreator: any, params: any[]) {\r\n        var result: {\r\n            options?: AppOptions,\r\n            preLoadedState?: T,\r\n            enhancer?: StoreEnhancer<T>\r\n        } = {};\r\n\r\n        if (params.length === 0) {\r\n\r\n            // no parameters\r\n            result.options = new AppOptions();\r\n            result.preLoadedState = appCreator;\r\n\r\n        } else if (params.length === 1) {\r\n\r\n            if (typeof params[0] === 'function') {\r\n\r\n                // only enhancer\r\n                result.options = new AppOptions();\r\n                result.enhancer = params[0];\r\n                result.preLoadedState = appCreator;\r\n\r\n            } else {\r\n\r\n                // only options\r\n                result.options = Object.assign(new AppOptions(), params[0]);\r\n                result.preLoadedState = appCreator;\r\n\r\n            }\r\n        } else if (params.length === 2) {\r\n\r\n            // options and pre-loaded state\r\n            result.options = Object.assign(new AppOptions(), params[0]);\r\n            result.preLoadedState = params[1];\r\n\r\n        } else {\r\n\r\n            // options, pre-loaded state and enhancer\r\n            result.options = Object.assign(new AppOptions(), params[0]);\r\n            result.preLoadedState = params[1];\r\n            result.enhancer = params[2];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private getAppName(name: string): string {\r\n        if (name)\r\n            return name;\r\n\r\n        if (!Object.keys(appsRepository).length) {\r\n            return DEFAULT_APP_NAME;\r\n        } else {\r\n            return DEFAULT_APP_NAME + '_' + (++appsCount);\r\n        }\r\n    }\r\n\r\n    //\r\n    // update state\r\n    //\r\n\r\n    private updateState(): void {\r\n\r\n        //\r\n        // Reducers are invoked with regular objects, therefor we use this\r\n        // method which copies the resulted values back to the components.\r\n        //\r\n\r\n        const start = Date.now();\r\n\r\n        var newState = this.store.getState();\r\n        newState = toPlainObject(newState);\r\n        log.verbose('[updateState] Store before: ', newState);\r\n\r\n        const visited = new Set();\r\n        const changedComponents = new Set();\r\n        this.updateStateRecursion(this.root, newState, [this.name], visited, changedComponents);\r\n\r\n        const end = Date.now();\r\n\r\n        log.debug(`[updateState] Component tree updated in ${end - start}ms.`);\r\n        log.verbose('[updateState] Store after: ', newState);\r\n\r\n        // TODO: notify changes\r\n    }\r\n\r\n    private updateStateRecursion(obj: any, newState: any, path: string[], visited: Set<any>, changedComponents: Set<Component>): any {\r\n\r\n        // same object\r\n        if (obj === newState)\r\n            return newState;\r\n\r\n        // primitive properties are updated by their owner objects\r\n        if (isPrimitive(obj) || isPrimitive(newState))\r\n            return newState;\r\n\r\n        // prevent endless loops on circular references\r\n        if (visited.has(obj))\r\n            return obj;\r\n        visited.add(obj);\r\n\r\n        // update\r\n        const targetType = obj.constructor;\r\n        const newStateType = newState.constructor;\r\n\r\n        if ((targetType === newStateType) || newStateType === Object) {\r\n\r\n            // update if:\r\n            // 1. same type\r\n            // 2. new state is a plain object (this is the reason we update recursively, to keep methods while updating props)\r\n            var changeMessage: string;\r\n            if (Array.isArray(obj) && Array.isArray(newState)) {\r\n                changeMessage = this.updateArray(obj, newState, path, visited, changedComponents);\r\n            } else {\r\n                changeMessage = this.updateObject(obj, newState, path, visited, changedComponents);\r\n            }\r\n        } else {\r\n\r\n            // overwrite, since those are different types (and the newState is not a plain object)\r\n            return newState;\r\n        }\r\n\r\n        // log\r\n        if (changeMessage && changeMessage.length) {\r\n            log.debug(`[updateState] Change in '${pathString(path)}'. ${changeMessage}`);\r\n            log.verbose(`[updateState] New state: `, obj);\r\n        } else {\r\n            log.verbose(`[updateState] No change in path '${pathString(path)}'.`);\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    private updateObject(obj: any, newState: any, path: string[], visited: Set<any>, changedComponents: Set<Component>): string {\r\n\r\n        // delete anything not in the new state\r\n        var propsDeleted: string[] = [];\r\n        Object.keys(obj).forEach(key => {\r\n            if (!newState.hasOwnProperty(key)) {\r\n                delete obj[key];\r\n                propsDeleted.push(key);\r\n            }\r\n        });\r\n\r\n        // assign new state recursively\r\n        var propsAssigned: string[] = [];\r\n        Object.keys(newState).forEach(key => {\r\n\r\n            // state of connected components is update on their source\r\n            if (Connect.isConnectedProperty(obj, key))\r\n                return;\r\n\r\n            var subState = newState[key];\r\n            var subObj = obj[key];\r\n\r\n            // must update recursively, otherwise we may lose children types (and methods...)\r\n            const newSubObj = this.updateStateRecursion(subObj, subState, path.concat(key), visited, changedComponents);\r\n\r\n            // assign only if changed, in case anyone is monitoring assignments\r\n            if (newSubObj !== subObj) {\r\n                obj[key] = newSubObj;\r\n                propsAssigned.push(key);\r\n            }\r\n        });\r\n\r\n        // calculate and assign computed props\r\n        Computed.computeProps(obj);\r\n\r\n        // handle changes\r\n        if (propsAssigned.length || propsDeleted.length) {\r\n        \r\n            // notify\r\n            if (obj instanceof Component && !changedComponents.has(obj))\r\n                changedComponents.add(obj);\r\n\r\n            // log\r\n            const propsAssignedMessage = propsAssigned.length ? `Props assigned: ${propsAssigned.join(', ')}.` : '';\r\n            const propsDeleteMessage = propsDeleted.length ? `Props deleted: ${propsDeleted.join(', ')}.` : '';\r\n            const space = (propsAssigned.length && propsDeleted.length) ? ' ' : '';\r\n            return propsAssignedMessage + space + propsDeleteMessage;\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private updateArray(arr: any[], newState: any[], path: string[], visited: Set<any>, changedComponents: Set<Component>): string {\r\n\r\n        var changeMessage: string[] = [];\r\n\r\n        const prevLength = arr.length;\r\n        const newLength = newState.length;\r\n\r\n        // assign existing\r\n        var itemsAssigned: number[] = [];\r\n        for (let i = 0; i < Math.min(prevLength, newLength); i++) {\r\n            var subState = newState[i];\r\n            var subObj = arr[i];\r\n            const newSubObj = this.updateStateRecursion(subObj, subState, path.concat(i.toString()), visited, changedComponents);\r\n            if (newSubObj !== subObj) {\r\n                arr[i] = newSubObj;\r\n                itemsAssigned.push(i);\r\n            }\r\n        }\r\n        if (itemsAssigned.length)\r\n            changeMessage.push(`Assigned item(s) at indexes ${itemsAssigned.join(', ')}.`);\r\n\r\n        // add / remove\r\n        if (newLength > prevLength) {\r\n\r\n            // add new items\r\n            const newItems = newState.slice(prevLength);\r\n            Array.prototype.push.apply(arr, newItems);\r\n            changeMessage.push(`Added ${newLength - prevLength} item(s) at index ${prevLength}.`);\r\n\r\n        } else if (prevLength > newLength) {\r\n\r\n            // remove old items\r\n            arr.splice(newLength);\r\n            changeMessage.push(`Removed ${prevLength - newLength} item(s) at index ${newLength}.`);\r\n        }\r\n\r\n        return changeMessage.join(' ');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/reduxApp.ts","export * from './actions';\r\nexport * from './component';\r\nexport * from './reducer';\r\nexport * from './utils';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/index.ts","import { Action } from 'redux';\r\nimport { ComponentInfo, CreatorInfo } from '../info';\r\nimport { getActionName } from '../options';\r\nimport { IMap, Method } from '../types';\r\nimport { getMethods } from '../utils';\r\nimport { Component } from './component';\r\n\r\n// tslint:disable-next-line:interface-name\r\nexport interface ReduxAppAction extends Action {\r\n    id: any;\r\n    payload: any[];\r\n}\r\n\r\nexport class ComponentActions {\r\n\r\n    public static createActions(creator: object): IMap<Method> {\r\n        const methods = getMethods(creator);\r\n        if (!methods)\r\n            return undefined;\r\n\r\n        const creatorInfo = CreatorInfo.getInfo(creator);\r\n        const componentActions: any = {};\r\n        Object.keys(methods).forEach(key => {\r\n            componentActions[key] = function (this: Component<object>, ...payload: any[]): void {\r\n\r\n                // verify 'this' arg\r\n                if (!(this instanceof Component))\r\n                    throw new Error(`Component method invoked with non-Component as 'this'. Bound 'this' argument is: ${this}`);\r\n\r\n                const oldMethod = methods[key];\r\n                if (creatorInfo.noDispatch[key]) {\r\n\r\n                    // handle non-dispatch methods (just call the function)\r\n                    oldMethod.call(this, ...payload);\r\n                } else {\r\n\r\n                    // handle dispatch methods (use store dispatch)\r\n                    const compInfo = ComponentInfo.getInfo(this);\r\n                    const action: ReduxAppAction = {\r\n                        type: getActionName(creator, key, creatorInfo.options),\r\n                        id: (compInfo ? compInfo.id : undefined),\r\n                        payload: payload\r\n                    };\r\n                    compInfo.dispatch(action);\r\n                }\r\n            };\r\n        });\r\n\r\n        return componentActions;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/actions.ts","import { Store } from 'redux';\r\nimport { ComponentId, Connect } from '../decorators';\r\nimport { ClassInfo, ComponentInfo, CreatorInfo } from '../info';\r\nimport { globalOptions } from '../options';\r\nimport { ReduxApp } from '../reduxApp';\r\nimport { isPrimitive, log, pathString } from '../utils';\r\nimport { ComponentActions } from './actions';\r\nimport { ComponentReducer } from './reducer';\r\n\r\n// tslint:disable:member-ordering variable-name\r\n\r\nexport class Component<T extends object = object> {    \r\n\r\n    //\r\n    // static methods\r\n    //\r\n\r\n    public static create<T extends object>(store: Store<T>, creator: T, parentCreator?: object, path: string[] = [], visited = new Set()): Component<T> {\r\n\r\n        // create the component\r\n        var ComponentClass = Component.getComponentClass(creator);\r\n        const component = new ComponentClass(store, creator, parentCreator, path, visited);\r\n\r\n        // register it on it's containing app\r\n        ReduxApp.registerComponent(component, creator, path);\r\n\r\n        return component;\r\n    }    \r\n\r\n    private static getComponentClass(creator: object): typeof Component {\r\n        var info = CreatorInfo.getInfo(creator);\r\n        if (!info.componentClass) {\r\n            info.componentClass = Component.createComponentClass(creator);\r\n            info.originalClass = creator.constructor;\r\n        }\r\n        return info.componentClass;\r\n    }\r\n\r\n    private static createComponentClass<T extends object>(creator: object) {\r\n\r\n        // declare new class\r\n        class ComponentClass extends Component<T> {\r\n            public __originalClassName__ = creator.constructor.name; // tslint:disable-line:variable-name\r\n\r\n            constructor(store: Store<T>, creatorArg: T, ...params: any[]) {\r\n                super(store, creatorArg, ...params);\r\n\r\n                if (!globalOptions.emitClassNames)\r\n                    delete this.__originalClassName__;\r\n            }\r\n        }\r\n\r\n        // patch it's prototype\r\n        const actions = ComponentActions.createActions(creator);\r\n        Object.assign(ComponentClass.prototype, actions);\r\n\r\n        return ComponentClass;\r\n    }       \r\n\r\n    private static createSelf(component: Component, store: Store<object>, creator: object, parentCreator: any, path: string[]): void {\r\n\r\n        // regular js props (including getters and setters)\r\n        for (let key of Object.getOwnPropertyNames(creator)) {\r\n            var desc = Object.getOwnPropertyDescriptor(creator, key);\r\n            Object.defineProperty(component, key, desc);\r\n        }\r\n\r\n        // init component info        \r\n        const selfInfo = ComponentInfo.initInfo(component);\r\n        const selfClassInfo = ClassInfo.getOrInitInfo(component);\r\n\r\n        // copy info from creator\r\n        const creatorInfo = CreatorInfo.getInfo(creator);\r\n        const creatorClassInfo = ClassInfo.getInfo(creator) || new ClassInfo();\r\n\r\n        selfInfo.id = ComponentId.getComponentId(parentCreator, path);\r\n        selfInfo.originalClass = creatorInfo.originalClass;        \r\n        selfClassInfo.computedGetters = creatorClassInfo.computedGetters;\r\n\r\n        // connected props\r\n        Connect.setupConnectedProps(component, selfClassInfo, creator, creatorClassInfo);\r\n\r\n        // dispatch\r\n        selfInfo.dispatch = store.dispatch;\r\n\r\n        // reducer\r\n        selfInfo.reducer = ComponentReducer.createReducer(component, creator);\r\n    }\r\n\r\n    private static createSubComponents(obj: any, store: Store<object>, creator: object, path: string[], visited: Set<any>): void {\r\n\r\n        // no need to search inside primitives\r\n        if (isPrimitive(obj))\r\n            return;\r\n\r\n        // prevent endless loops on circular references\r\n        if (visited.has(obj))\r\n            return;\r\n        visited.add(obj);\r\n\r\n        // traverse object children\r\n        const searchIn = creator || obj;\r\n        for (let key of Object.keys(searchIn)) {\r\n\r\n            const connectionInfo = Connect.isConnectedProperty(obj, key);\r\n            if (connectionInfo) {\r\n                log.verbose(`[createSubComponents] Property in path '${pathString(path)}.${key}' is connected. Skipping component creation.`);\r\n                continue;\r\n            }\r\n\r\n            var subPath = path.concat([key]);\r\n\r\n            var subCreator = searchIn[key];\r\n            if (CreatorInfo.getInfo(subCreator)) {\r\n\r\n                // child is sub-component\r\n                obj[key] = Component.create(store, subCreator, creator, subPath, visited);\r\n            } else {\r\n\r\n                // child is regular object, nothing special to do with it\r\n                Component.createSubComponents(obj[key], store, null, subPath, visited);\r\n            }\r\n        }\r\n    }    \r\n\r\n    //\r\n    // constructor\r\n    //\r\n\r\n    private constructor(store: Store<T>, creator: T, parentCreator?: object, path: string[] = [], visited = new Set()) {\r\n\r\n        if (!CreatorInfo.getInfo(creator))\r\n            throw new Error(`Argument '${\"creator\"}' is not a component creator. Did you forget to use the decorator?`);\r\n\r\n        Component.createSelf(this, store, creator, parentCreator, path);\r\n        Component.createSubComponents(this, store, creator, path, visited);\r\n\r\n        log.debug(`[Component] New ${creator.constructor.name} component created. path: ${pathString(path)}`);\r\n    }\r\n\r\n    // \r\n    // Note: Component methods are static so that they will not be exposed unnecessarily through the prototype chain.\r\n    //\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/component.ts","import { DEFAULT_APP_NAME } from '../../reduxApp';\r\n\r\nexport class ConnectOptions {\r\n    /**\r\n     * The name of the ReduxApp instance to connect to.\r\n     * If not specified will connect to default app.\r\n     */\r\n    public app?= DEFAULT_APP_NAME;\r\n    /**\r\n     * The ID of the target component (assuming the ID was assigned to the\r\n     * component by the 'withId' decorator).\r\n     * If not specified will connect to the first available component of that type.\r\n     */\r\n    public id?: any;\r\n    /**\r\n     * The 'connect' decorator uses a getter to connect to the it's target. By\r\n     * default the getter is replaced with a standard value (reference) once the\r\n     * first non-empty value is retrieved. Set this value to true to leave the\r\n     * getter in place.\r\n     * Default value: false\r\n     */\r\n    public live?= false;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/connectOptions.ts","import { Reducer, ReducersMapObject } from 'redux';\r\nimport { Computed, Connect } from '../decorators';\r\nimport { ComponentInfo, CreatorInfo } from '../info';\r\nimport { getActionName } from '../options';\r\nimport { getMethods, isPrimitive, log, simpleCombineReducers } from '../utils';\r\nimport { ReduxAppAction } from './actions';\r\nimport { Component } from './component';\r\n\r\ntype StateTransformer = (state: any, obj: any) => any;\r\n\r\n// tslint:disable:member-ordering\r\n\r\nexport class ComponentReducer {\r\n\r\n    private static readonly identityReducer = (state: any) => state;\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public static createReducer(component: Component, creator: object): Reducer<object> {\r\n\r\n        // method names lookup\r\n        const methods = getMethods(creator);\r\n        const options = CreatorInfo.getInfo(creator).options;\r\n        const methodNames: any = {};\r\n        Object.keys(methods).forEach(methName => {\r\n            var actionName = getActionName(creator, methName, options);\r\n            methodNames[actionName] = methName;\r\n        });\r\n\r\n        // component id\r\n        const componentId = ComponentInfo.getInfo(component).id;\r\n\r\n        // the reducer\r\n        return (state: object, action: ReduxAppAction) => {\r\n\r\n            log.verbose(`[reducer] Reducer of: ${creator.constructor.name}, action: ${action.type}`);\r\n\r\n            // initial state (redundant, handled in 'prepareState')\r\n            if (state === undefined) {\r\n                log.verbose('[reducer] State is undefined, returning initial value');\r\n                return component;\r\n            }\r\n\r\n            // check component id\r\n            if (componentId !== action.id) {\r\n                log.verbose(`[reducer] Component id and action.id don't match (${componentId} !== ${action.id})`);\r\n                return state;\r\n            }\r\n\r\n            // check if should use this reducer\r\n            const methodName = methodNames[action.type];\r\n            const actionReducer = methods[methodName];\r\n            if (!actionReducer) {\r\n                log.verbose('[reducer] No matching action in this reducer, returning previous state');\r\n                return state;\r\n            }\r\n\r\n            // call the action-reducer with the new state as the 'this' argument\r\n            var newState = Object.assign({}, state);\r\n            actionReducer.call(newState, ...action.payload);\r\n\r\n            // return new state\r\n            log.verbose('[reducer] Reducer invoked, returning new state');\r\n            return newState;\r\n        };\r\n    }\r\n\r\n    public static combineReducersTree(root: any): Reducer<any> {\r\n\r\n        const reducer = ComponentReducer.combineReducersRecursion(root, new Set());\r\n\r\n        return (state: any, action: ReduxAppAction) => {\r\n            const start = Date.now();\r\n\r\n            var newState = reducer(state, action);\r\n            newState = ComponentReducer.finalizeState(newState, root);\r\n\r\n            const end = Date.now();\r\n            log.debug(`[rootReducer] Reducer tree processed in ${end - start}ms.`);\r\n\r\n            return newState;\r\n        };\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private static combineReducersRecursion(obj: any, visited: Set<any>): Reducer<any> {\r\n\r\n        // no need to search inside primitives\r\n        if (isPrimitive(obj))\r\n            return undefined;\r\n\r\n        // prevent endless loops on circular references\r\n        if (visited.has(obj))\r\n            return undefined;\r\n        visited.add(obj);\r\n\r\n        // get the root reducer\r\n        var rootReducer: Reducer<any>;\r\n        const info = ComponentInfo.getInfo(obj as any);\r\n        if (info) {\r\n            rootReducer = info.reducer;\r\n        } else {\r\n            rootReducer = ComponentReducer.identityReducer;\r\n        }\r\n\r\n        // gather the sub-reducers\r\n        const subReducers: ReducersMapObject = {};\r\n        for (let key of Object.keys(obj)) {\r\n\r\n            // connected components are modified only by their source\r\n            if (Connect.isConnectedProperty(obj, key))\r\n                continue;\r\n\r\n            // other objects\r\n            var newSubReducer = ComponentReducer.combineReducersRecursion((obj as any)[key], visited);\r\n            if (typeof newSubReducer === 'function')\r\n                subReducers[key] = newSubReducer;\r\n        }\r\n\r\n        var resultReducer = rootReducer;\r\n\r\n        // combine reducers\r\n        if (Object.keys(subReducers).length) {\r\n            var combinedSubReducer = simpleCombineReducers(subReducers);\r\n\r\n            resultReducer = (state: object, action: ReduxAppAction) => {\r\n\r\n                const thisState = rootReducer(state, action);\r\n                const subStates = combinedSubReducer(thisState, action);\r\n\r\n                // merge self and sub states\r\n                var combinedState = {\r\n                    ...thisState,\r\n                    ...subStates\r\n                };\r\n\r\n                return combinedState;\r\n            };\r\n        }\r\n\r\n        return resultReducer;\r\n    }    \r\n\r\n    private static finalizeState(rootState: any, root: any): any {\r\n        return ComponentReducer.transformDeep(rootState, root, (subState, subObj) => {\r\n\r\n            // replace computed and connected props with placeholders\r\n            var newSubState = Computed.removeComputedProps(subState, subObj);\r\n            newSubState = Connect.removeConnectedProps(newSubState, subObj);\r\n\r\n            return newSubState;\r\n        }, new Set());\r\n    }\r\n\r\n    private static transformDeep(target: any, source: any, callback: StateTransformer, visited: Set<any>): any {\r\n\r\n        // not traversing primitives\r\n        if (isPrimitive(target) || isPrimitive(source))\r\n            return target;\r\n\r\n        // prevent endless loops on circular references\r\n        if (visited.has(source))\r\n            return source;\r\n        visited.add(source);\r\n\r\n        // transform children\r\n        Object.keys(target).forEach(key => {\r\n\r\n            // state of connected components is update on their source\r\n            if (Connect.isConnectedProperty(source, key))\r\n                return;\r\n\r\n            // transform child\r\n            var subState = target[key];\r\n            var subObj = source[key];\r\n            var newSubState = ComponentReducer.transformDeep(subState, subObj, callback, visited);\r\n\r\n            // assign only if changed\r\n            if (newSubState !== subState) {\r\n                target[key] = newSubState;\r\n            }\r\n        });\r\n\r\n        // invoke on self\r\n        return callback(target, source);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/reducer.ts","export { isInstanceOf } from './components';\r\nexport { component, connect, computed, noDispatch, sequence, withId } from './decorators';\r\nexport { SchemaOptions, AppOptions, GlobalOptions, LogLevel } from './options';\r\nexport { ReduxApp } from './reduxApp';\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/index.ts","import { CLASS_INFO, getSymbol, setSymbol } from '../symbols';\r\nimport { Getter, IMap } from '../types';\r\n\r\n/**\r\n * Metadata stored on instances of regular classes for various redux-app needs.\r\n */\r\nexport class ClassInfo {\r\n\r\n    public static getInfo(obj: object): ClassInfo {\r\n        if (!obj)\r\n            return undefined;\r\n\r\n        return getSymbol(obj, CLASS_INFO);\r\n    }\r\n\r\n    public static getOrInitInfo(obj: object): ClassInfo {\r\n\r\n        // get previous\r\n        var info = ClassInfo.getInfo(obj);\r\n\r\n        // create if no previous\r\n        if (!info) {\r\n            info = setSymbol(obj, CLASS_INFO, new ClassInfo());\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n    public computedGetters: IMap<Getter> = {};\r\n    public connectedProps: IMap<boolean> = {};\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/classInfo.ts","import { Dispatch, Reducer } from 'redux';\r\nimport { Component } from '../components';\r\nimport { COMPONENT_INFO, getSymbol, setSymbol } from '../symbols';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Metadata stored on every component instance.\r\n */\r\nexport class ComponentInfo {\r\n\r\n    public static getInfo(component: Component): ComponentInfo {\r\n        if (!component)\r\n            return undefined;\r\n\r\n        return getSymbol(component, COMPONENT_INFO);\r\n    }\r\n\r\n    public static initInfo(component: Component): ComponentInfo {\r\n        return setSymbol(component, COMPONENT_INFO, new ComponentInfo());\r\n    }\r\n\r\n    public id: any;\r\n    public originalClass: Function;\r\n    public dispatch: Dispatch<any>;\r\n    public reducer: Reducer<any>;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/componentInfo.ts","import { Component } from '../components';\r\nimport { SchemaOptions } from '../options';\r\nimport { CREATOR_INFO, getSymbol, setSymbol } from '../symbols';\r\nimport { IMap } from '../types';\r\nimport { getConstructorProp } from '../utils';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Metadata information stored on \"component creators\" - classes that were\r\n * decorated with the @component decorator. Since it is common to all instances\r\n * it is stored on the class constructor. It is used for the most part in the\r\n * component creation process.\r\n */\r\nexport class CreatorInfo {\r\n\r\n    //\r\n    // public static\r\n    //\r\n\r\n    public static getInfo(obj: object | Function): CreatorInfo {\r\n        if (!obj)\r\n            return undefined;\r\n\r\n        if (typeof obj === 'object') {\r\n            return getConstructorProp(obj, CREATOR_INFO);\r\n        } else {\r\n            return getSymbol(obj, CREATOR_INFO);\r\n        }\r\n    }\r\n\r\n    public static getOrInitInfo(obj: object | Function): CreatorInfo {\r\n\r\n        // get previous\r\n        var info = CreatorInfo.getInfo(obj);\r\n\r\n        // create if no previous\r\n        if (!info) {\r\n            const isConstructor = (typeof obj === 'function' ? true : false);\r\n            const target = (isConstructor ? obj : obj.constructor);\r\n            info = setSymbol(target, CREATOR_INFO, new CreatorInfo());\r\n        }\r\n\r\n        return info;\r\n    }    \r\n\r\n    //\r\n    // instance members\r\n    //\r\n\r\n    public originalClass: Function;\r\n    public componentClass: typeof Component;\r\n    public options: SchemaOptions;\r\n    public noDispatch: IMap<boolean> = {};\r\n    public childIds: any = {};\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/info/creatorInfo.ts","export const dataDescriptor: PropertyDescriptor = {\r\n    writable: true,\r\n    configurable: true,\r\n    enumerable: true\r\n};\r\n\r\nexport const accessorDescriptor: PropertyDescriptor = {\r\n    configurable: true,\r\n    enumerable: true\r\n};\r\n\r\nexport function deferredDefineProperty(target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\r\n    const init = (isGet: boolean) => function (this: any, newVal?: any) {\r\n\r\n        //\r\n        // This code addresses an issue/limitation with typescript and defineProperty inside property decorator.        \r\n        // https://stackoverflow.com/questions/43950908/typescript-decorator-and-object-defineproperty-weird-behavior\r\n        //\r\n\r\n        // Define the property.\r\n        // This is called at runtime, so \"this\" is the instance.\r\n        Object.defineProperty(this, propertyKey, descriptor);\r\n\r\n        // Perform original action\r\n        if (isGet) {\r\n            return this[propertyKey];\r\n        } else {\r\n            this[propertyKey] = newVal;\r\n        }\r\n    };\r\n\r\n    // Override property to let init occur on first get/set\r\n    return Object.defineProperty(target, propertyKey, {\r\n        get: init(true),\r\n        set: init(false),\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/defineProperty.ts","import { globalOptions, LogLevel } from '../options';\r\n\r\n// tslint:disable:no-console\r\n\r\nclass Log {\r\n\r\n    public verbose(message: string, ...optionalParams: any[]): void {\r\n        if (!this.shouldLog(LogLevel.Verbose))\r\n            return;\r\n        console.debug('VERBOSE [redux-app] ' + message, ...optionalParams);\r\n    }\r\n\r\n    public debug(message: string, ...optionalParams: any[]): void {\r\n        if (!this.shouldLog(LogLevel.Debug))\r\n            return;\r\n        console.log('DEBUG [redux-app] ' + message, ...optionalParams);\r\n    }\r\n\r\n    public warn(message: string, ...optionalParams: any[]): void {\r\n        if (!this.shouldLog(LogLevel.Warn))\r\n            return;\r\n        console.warn('WARN [redux-app] ' + message, ...optionalParams);\r\n    }    \r\n\r\n    private shouldLog(level: LogLevel): boolean {\r\n        if (globalOptions.logLevel === LogLevel.None)\r\n            return false;\r\n        if (globalOptions.logLevel > level)\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport const log = new Log();\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/log.ts","module.exports = require(\"lodash.snakecase\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.snakecase\"\n// module id = 18\n// module chunks = 0","import { AnyAction, ReducersMapObject } from 'redux';\r\n\r\n/**\r\n * A simple version of redux combineReducers with no assertions or warnings.\r\n * @see https://raw.githubusercontent.com/reactjs/redux/master/src/combineReducers.js\r\n */\r\nexport function simpleCombineReducers(reducers: ReducersMapObject): any {\r\n    const reducerKeys = Object.keys(reducers);\r\n\r\n    return function combination(state: any = {}, action: AnyAction) {\r\n        let hasChanged = false;\r\n        const nextState: any = {};\r\n        for (let key of reducerKeys) {\r\n            const reducer = reducers[key];\r\n            const previousStateForKey = state[key];\r\n            const nextStateForKey = reducer(previousStateForKey, action);\r\n            nextState[key] = nextStateForKey;\r\n            hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\r\n        }\r\n        return hasChanged ? nextState : state;\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/simpleCombineReducers.ts","import { IMap, Method } from '../types';\r\n\r\n/**\r\n * Return true if 'val' is primitive. For the sake of this test 'null' and\r\n * 'undefined' are considered primitives.\r\n */\r\nexport function isPrimitive(val: any): boolean {\r\n    if (!val)\r\n        return true;\r\n\r\n    const type = typeof val;\r\n    return type !== 'object' && type !== 'function';\r\n}\r\n\r\nexport function getMethods(obj: object): IMap<Method> {\r\n    if (!obj)\r\n        return undefined;\r\n\r\n    var proto = Object.getPrototypeOf(obj);\r\n    if (!proto)\r\n        return undefined;\r\n\r\n    var methods: any = {};\r\n    for (let key of Object.keys(proto)) {\r\n\r\n        // avoid invoking getters\r\n        var desc = Object.getOwnPropertyDescriptor(proto, key);\r\n        var hasGetter = desc && typeof desc.get === 'function';\r\n\r\n        if (!hasGetter && typeof proto[key] === 'function')\r\n            methods[key] = proto[key];\r\n    }\r\n\r\n    return methods;\r\n}\r\n\r\nexport function getConstructorProp(obj: object, key: symbol | string): any {\r\n    return obj && obj.constructor && (obj.constructor as any)[key];\r\n}\r\n\r\nexport function pathString(path: string[]): string {\r\n    if (path.length) {\r\n        return `${path.join('.')}`;\r\n    } else {\r\n        return 'root';\r\n    }\r\n}\r\n\r\nexport function toPlainObject(obj: any): any {\r\n    const json = JSON.stringify(obj, (key: any, value: any) => value === undefined ? null : value);\r\n    return JSON.parse(json);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/utils/utils.ts","export * from './connectOptions';\r\nexport * from './connect';\r\nexport * from './decorator';\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/index.ts","module.exports = require(\"redux\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redux\"\n// module id = 22\n// module chunks = 0","import { Component } from '../../components';\r\nimport { ClassInfo, ComponentInfo } from '../../info';\r\n\r\nexport class Connect {\r\n\r\n    public static readonly placeholderPrefix = '<connected';\r\n\r\n    public static isConnectedProperty(propHolder: Component | object, propKey: string | symbol): boolean {\r\n        const compInfo = ClassInfo.getInfo(propHolder);\r\n        return compInfo && compInfo.connectedProps[propKey];\r\n    }\r\n\r\n    public static setupConnectedProps(target: Component, targetInfo: ClassInfo, source: object, sourceInfo: ClassInfo): void {\r\n        if (!sourceInfo)\r\n            return;\r\n\r\n        // trigger connected props (necessary for connected props with initial 'undefined' value)\r\n        for (let propKey of Object.keys(sourceInfo.connectedProps)) {\r\n\r\n            // tslint:disable-next-line:no-unused-expression\r\n            (source as any)[propKey];\r\n            var desc = Object.getOwnPropertyDescriptor(source, propKey);\r\n            Object.defineProperty(target, propKey, desc);\r\n        }\r\n\r\n        // copy metadata\r\n        targetInfo.connectedProps = sourceInfo.connectedProps;\r\n    }\r\n\r\n    /**\r\n     * Returns a shallow clone of 'state' with it's computed props replaced with\r\n     * Connect.placeholder.\r\n     */\r\n    public static removeConnectedProps(state: any, obj: any): any {\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return state;\r\n\r\n        const newState = Object.assign({}, state);\r\n        for (let propKey of Object.keys(info.connectedProps)) {\r\n            \r\n            var sourceInfoString = '';\r\n            \r\n            var sourceInfo = ComponentInfo.getInfo(obj[propKey]);            \r\n            if (sourceInfo) {\r\n                var sourceIdString = (sourceInfo.id !== undefined ? '.' + sourceInfo.id : '');\r\n                sourceInfoString = '.' + sourceInfo.originalClass.name + sourceIdString;\r\n            }\r\n\r\n            newState[propKey] = Connect.placeholderPrefix + sourceInfoString + '>';\r\n        }\r\n        return newState;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/connect.ts","import 'reflect-metadata';\r\nimport { ClassInfo } from '../../info';\r\nimport { appsRepository } from '../../reduxApp';\r\nimport { accessorDescriptor, dataDescriptor, deferredDefineProperty, log } from '../../utils';\r\nimport { ConnectOptions } from './connectOptions';\r\n\r\n/**\r\n * Property decorator. \r\n * \r\n * Connects the property to a component in the specified (or default) app.\r\n * \r\n * Usage Note: \r\n * \r\n * Connected properties can be thought of as pointers to other components. If\r\n * the connected property has an initial value assigned, it will be overridden\r\n * once the component is connected. One consequence of this fact is that there\r\n * must be at least one source component, i.e. there must be at least one\r\n * component of that type that has a value and is not decorated with the\r\n * 'connect' decorator.\r\n */\r\nexport function connect(options?: ConnectOptions): PropertyDecorator;\r\nexport function connect(target: any, propertyKey: string | symbol): void;\r\nexport function connect(targetOrOptions?: any, propertyKeyOrNothing?: string | symbol): any {\r\n    if (propertyKeyOrNothing) {\r\n        connectDecorator.call(undefined, targetOrOptions, propertyKeyOrNothing);\r\n    } else {\r\n        return (target: any, propertyKey: string | symbol) => connectDecorator(target, propertyKey, targetOrOptions);\r\n    }\r\n}\r\n\r\nfunction connectDecorator(target: any, propertyKey: string | symbol, options?: ConnectOptions) {\r\n\r\n    options = Object.assign(new ConnectOptions(), options);\r\n\r\n    // initial value\r\n    var value = target[propertyKey];\r\n\r\n    // mark as connected\r\n    //\r\n    // notes:\r\n    // 1. we mark to (among others) avoid duplicate storage in the store.\r\n    // 2. we don't use CreatorInfo here since it is what defines component\r\n    //    creators and standard classes may also use the connect decorator.\r\n    const info = ClassInfo.getOrInitInfo(target);\r\n    info.connectedProps[propertyKey] = true;\r\n\r\n    // get the property type \r\n    // (see 'metadata' section of https://www.typescriptlang.org/docs/handbook/decorators.html)\r\n    const type = Reflect.getMetadata(\"design:type\", target, propertyKey);\r\n    if (!type) {\r\n        const reflectErrMsg = `[connect] Failed to reflect type of property '${propertyKey}'. ` +\r\n            `Make sure you're using TypeScript and that the 'emitDecoratorMetadata' compiler ` +\r\n            `option in your tsconfig.json file is turned on. ` +\r\n            `Note that even if TypeScript is configured correctly it may fail to reflect ` +\r\n            `property types due to the loading order of your classes. ` +\r\n            `In that case, make sure that the type of '${propertyKey}' is loaded prior to the ` +\r\n            `type of it's containing class (${target.constructor.name}).`;\r\n        throw new Error(reflectErrMsg);\r\n    }\r\n\r\n    // remember old descriptor\r\n    const oldDescriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\r\n\r\n    // and replace it with a new descriptor\r\n    const newDescriptor = {\r\n        get: function (this: any) {\r\n\r\n            const app = appsRepository[options.app];\r\n            if (!app) {\r\n                log.debug(`[connect] Application '${options.app}' does not exist. Property ${propertyKey} is not connected.`);\r\n                if (oldDescriptor && oldDescriptor.get) {\r\n                    return oldDescriptor.get();\r\n                } else {\r\n                    return value;\r\n                }\r\n            }\r\n\r\n            // get the component to connect\r\n            const warehouse = app.getTypeWarehouse(type);\r\n            var result: any;\r\n            if (options.id) {\r\n\r\n                // get by id\r\n                result = warehouse.get(options.id);\r\n            } else {\r\n\r\n                // get the first value\r\n                result = warehouse.values().next().value;\r\n            }\r\n\r\n            // once connected, replace getter with regular data descriptor\r\n            // (so that view frameworks such as Aurelia and Angular won't\r\n            // need to use dirty-checking)\r\n            if (result && !options.live) {\r\n\r\n                Object.defineProperty(this, propertyKey, dataDescriptor);\r\n                value = this[propertyKey] = result;\r\n                log.debug(`[connect] Property '${propertyKey}' connected. Type: ${type.name}.`);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        set: (newValue: any) => {\r\n\r\n            // disconnection warning\r\n            const app = appsRepository[options.app];\r\n            if (app) {\r\n\r\n                // will only get here if 'live' option is on\r\n                log.warn(`[connect] Connected component '${propertyKey}' value assigned. Component disconnected.`);\r\n            }\r\n\r\n            // Set value.\r\n            // If called after connection it will disconnect the property.\r\n            // If called before connection will behave as the original property did.\r\n            if (oldDescriptor && oldDescriptor.set) {\r\n                return oldDescriptor.set(newValue);\r\n            } else if (!oldDescriptor || oldDescriptor && oldDescriptor.writable) {\r\n                return value = newValue;\r\n            }\r\n        }\r\n    };\r\n\r\n    return deferredDefineProperty(target, propertyKey, Object.assign({}, accessorDescriptor, newDescriptor));\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/connect/decorator.ts","module.exports = require(\"reflect-metadata\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"reflect-metadata\"\n// module id = 25\n// module chunks = 0","import { CreatorInfo } from '../info';\r\nimport { globalOptions, SchemaOptions } from '../options';\r\n\r\n// tslint:disable:ban-types\r\n\r\n/**\r\n * Class decorator.\r\n */\r\nexport function component(ctor: Function): any;\r\nexport function component(options: SchemaOptions): any; // tslint:disable-line:unified-signatures\r\nexport function component(ctorOrOptions: Function | SchemaOptions): any {\r\n    if (typeof ctorOrOptions === 'function') {\r\n        componentDecorator.call(undefined, ctorOrOptions);\r\n    } else {\r\n        return (ctor: Function) => componentDecorator(ctor, ctorOrOptions);\r\n    }\r\n}\r\n\r\nfunction componentDecorator(ctor: Function, options?: SchemaOptions) {\r\n    const info = CreatorInfo.getOrInitInfo(ctor);\r\n    info.options = Object.assign({}, options, new SchemaOptions(), globalOptions.schema);    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/component.ts","import { ClassInfo } from '../info';\r\nimport { dataDescriptor, deferredDefineProperty, log } from '../utils';\r\n\r\n/**\r\n * Property decorator.\r\n * Computed values are computed each time the store state is changed.\r\n */\r\nexport function computed(target: any, propertyKey: string | symbol): void {\r\n    const descriptor = Object.getOwnPropertyDescriptor(target, propertyKey);\r\n\r\n    if (typeof descriptor.get !== 'function')\r\n        throw new Error(`Failed to decorate '${propertyKey}'. The 'computed' decorator should only be used on getters.`);\r\n\r\n    if (descriptor.set)\r\n        throw new Error(`Failed to decorate '${propertyKey}'. Decorated property should not have a setter.`);\r\n\r\n    // store getter for later\r\n    const info = ClassInfo.getOrInitInfo(target);\r\n    info.computedGetters[propertyKey] = descriptor.get;\r\n\r\n    // and replace it with a simple data descriptor\r\n    return deferredDefineProperty(target, propertyKey, dataDescriptor);\r\n}\r\n\r\nexport class Computed {\r\n\r\n    public static readonly placeholder = '<computed>';\r\n\r\n    /**\r\n     * Returns a shallow clone of 'state' with it's computed props replaced with\r\n     * Computed.placeholder.\r\n     */\r\n    public static removeComputedProps(state: any, obj: any): any {\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return state;\r\n\r\n        const newState = Object.assign({}, state);\r\n        for (let propKey of Object.keys(info.computedGetters)) {\r\n            newState[propKey] = Computed.placeholder;\r\n        }\r\n        return newState;\r\n    }\r\n\r\n    /**\r\n     * Replace each computed property of 'obj' with it's current computed value.\r\n     */\r\n    public static computeProps(obj: any): void {\r\n\r\n        // obj may be a component or any other object\r\n        const info = ClassInfo.getInfo(obj);\r\n        if (!info)\r\n            return;\r\n\r\n        for (let propKey of Object.keys(info.computedGetters)) {\r\n\r\n            // get old value\r\n            var getter = info.computedGetters[propKey];\r\n            log.verbose(`[computeProps] computing new value of '${propKey}'`);\r\n            var newValue = getter.call(obj);\r\n\r\n            // update if necessary\r\n            var oldValue = obj[propKey];\r\n            if (newValue !== oldValue) {\r\n                log.verbose(`[computeProps] updating the state of '${propKey}'. New value: '${newValue}', Old value: '${oldValue}'.`);\r\n                obj[propKey] = newValue;\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/computed.ts","import { CreatorInfo } from '../info';\r\n\r\n/**\r\n * Method decorator.\r\n * Instruct redux-app to keep this method as is and not to replace it with invocation of store.dispatch.\r\n * Alias of 'sequence'.\r\n */\r\nexport function noDispatch(target: object, propertyKey: string | symbol): void {\r\n    noDispatchDecorator(target, propertyKey);\r\n}\r\n\r\n/**\r\n * Method decorator.\r\n * Instruct redux-app to keep this method as is and not to replace it with invocation of store.dispatch.\r\n * Alias of 'noDispatch'.\r\n */\r\nexport function sequence(target: object, propertyKey: string | symbol): void {\r\n    noDispatchDecorator(target, propertyKey);\r\n}\r\n\r\nfunction noDispatchDecorator(target: object, propertyKey: string | symbol): void {\r\n    const info = CreatorInfo.getOrInitInfo(target);\r\n    info.noDispatch[propertyKey] = true;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/noDispatch.ts","import { CreatorInfo } from '../info';\r\nimport { AUTO_ID } from '../symbols';\r\nimport { log } from '../utils';\r\n\r\nexport function withId(id?: any): PropertyDecorator;\r\nexport function withId(target: object, propertyKey: string | symbol): void;\r\nexport function withId(targetOrId: any, propertyKeyOrNothing?: string | symbol): any {\r\n    if (propertyKeyOrNothing) {\r\n        withIdDecorator.call(undefined, targetOrId, propertyKeyOrNothing);\r\n    } else {\r\n        return (target: object, propertyKey: string | symbol) => withIdDecorator(target, propertyKey, targetOrId);\r\n    }\r\n}\r\n\r\nfunction withIdDecorator(target: object, propertyKey: string | symbol, id?: any) {\r\n    const info = CreatorInfo.getOrInitInfo(target);\r\n    info.childIds[propertyKey] = id || AUTO_ID;\r\n}\r\n\r\nexport class ComponentId {\r\n\r\n    private static autoComponentId = 0;\r\n\r\n    public static nextAvailableId(): any {\r\n        return --ComponentId.autoComponentId; // using negative ids to decrease chance of collision with user assigned ids\r\n    }\r\n\r\n    public static getComponentId(parentCreator: object, path: string[]): any {\r\n\r\n        //\r\n        // Note: The component id is first stored on it's parent. It can be only\r\n        // assigned to it once the component itself has been constructed. The\r\n        // differed assigned resolves situations where the component is created\r\n        // inside it's parent constructor or injected via DI. This could have\r\n        // been solved with custom getter and setter but decided to go with this\r\n        // approach here.\r\n        //\r\n\r\n        // no parent\r\n        if (!parentCreator || !path.length)\r\n            return undefined;\r\n\r\n        // parent is not a component creator\r\n        const info = CreatorInfo.getInfo(parentCreator);\r\n        if (!info)\r\n            return;\r\n\r\n        const selfKey = path[path.length - 1];\r\n        const id = info.childIds[selfKey];\r\n\r\n        // the specific component was not assigned an id\r\n        if (!id)\r\n            return undefined;\r\n\r\n        // auto id\r\n        if (id === AUTO_ID) {\r\n            const generatedId = ComponentId.nextAvailableId();\r\n            log.verbose('[getComponentId] new component id generated: ' + generatedId);\r\n            info.childIds[selfKey] = generatedId;\r\n            return generatedId;\r\n        }\r\n\r\n        // manual id\r\n        return id;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/decorators/withId.ts","import { ComponentInfo } from '../info';\r\n\r\n// tslint:disable-next-line:ban-types\r\nexport function isInstanceOf(obj: any, type: Function): boolean {\r\n    if (obj instanceof type)\r\n        return true;\r\n\r\n    const info = ComponentInfo.getInfo(obj);\r\n    return !!(info && info.originalClass === type);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ts-nameof-loader/main.js!./src/components/utils.ts"],"sourceRoot":""}